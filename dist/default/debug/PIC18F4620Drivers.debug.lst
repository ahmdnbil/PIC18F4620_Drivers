

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 01 19:21:27 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   0014FC                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_registers
    62   0014FC  80                 	db	128
    63   0014FD  0F                 	db	15
    64   0014FE  81                 	db	129
    65   0014FF  0F                 	db	15
    66   001500  82                 	db	130
    67   001501  0F                 	db	15
    68   001502  83                 	db	131
    69   001503  0F                 	db	15
    70   001504  84                 	db	132
    71   001505  0F                 	db	15
    72                           
    73                           ;initializer for _lat_registers
    74   001506  89                 	db	137
    75   001507  0F                 	db	15
    76   001508  8A                 	db	138
    77   001509  0F                 	db	15
    78   00150A  8B                 	db	139
    79   00150B  0F                 	db	15
    80   00150C  8C                 	db	140
    81   00150D  0F                 	db	15
    82   00150E  8D                 	db	141
    83   00150F  0F                 	db	15
    84                           
    85                           ;initializer for _tris_registers
    86   001510  92                 	db	146
    87   001511  0F                 	db	15
    88   001512  93                 	db	147
    89   001513  0F                 	db	15
    90   001514  94                 	db	148
    91   001515  0F                 	db	15
    92   001516  95                 	db	149
    93   001517  0F                 	db	15
    94   001518  96                 	db	150
    95   001519  0F                 	db	15
    96                           
    97                           ;initializer for _keypad
    98   00151A  E2                 	db	226
    99   00151B  EA                 	db	234
   100   00151C  F2                 	db	242
   101   00151D  FA                 	db	250
   102   00151E  02                 	db	2
   103   00151F  0A                 	db	10
   104   001520  12                 	db	18
   105   001521  1A                 	db	26
   106                           
   107                           	psect	smallconst
   108   001000                     __psmallconst:
   109                           	callstack 0
   110   001000  00                 	db	0
   111   001001                     _btn_values:
   112                           	callstack 0
   113   001001  37                 	db	55
   114   001002  38                 	db	56
   115   001003  39                 	db	57
   116   001004  2F                 	db	47
   117   001005  34                 	db	52
   118   001006  35                 	db	53
   119   001007  36                 	db	54
   120   001008  2A                 	db	42
   121   001009  31                 	db	49
   122   00100A  32                 	db	50
   123   00100B  33                 	db	51
   124   00100C  2D                 	db	45
   125   00100D  23                 	db	35
   126   00100E  30                 	db	48
   127   00100F  3D                 	db	61
   128   001010  2B                 	db	43
   129   001011                     __end_of_btn_values:
   130                           	callstack 0
   131   001011  00                 	db	0	; dummy byte at the end
   132   000000                     
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136   0014C6                     __pcinit:
   137                           	callstack 0
   138   0014C6                     start_initialization:
   139                           	callstack 0
   140   0014C6                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Initialize objects allocated to COMRAM (38 bytes)
   144                           ; load TBLPTR registers with __pidataCOMRAM
   145   0014C6  0EFC               	movlw	low __pidataCOMRAM
   146   0014C8  6EF6               	movwf	tblptrl,c
   147   0014CA  0E14               	movlw	high __pidataCOMRAM
   148   0014CC  6EF7               	movwf	tblptrh,c
   149   0014CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   150   0014D0  6EF8               	movwf	tblptru,c
   151   0014D2  EE00  F001         	lfsr	0,__pdataCOMRAM
   152   0014D6  EE10 F026          	lfsr	1,38
   153   0014DA                     copy_data0:
   154   0014DA  0009               	tblrd		*+
   155   0014DC  CFF5 FFEE          	movff	tablat,postinc0
   156   0014E0  50E5               	movf	postdec1,w,c
   157   0014E2  50E1               	movf	fsr1l,w,c
   158   0014E4  E1FA               	bnz	copy_data0
   159                           
   160                           ; Clear objects allocated to COMRAM (15 bytes)
   161   0014E6  EE00  F038         	lfsr	0,__pbssCOMRAM
   162   0014EA  0E0F               	movlw	15
   163   0014EC                     clear_0:
   164   0014EC  6AEE               	clrf	postinc0,c
   165   0014EE  06E8               	decf	wreg,f,c
   166   0014F0  E1FD               	bnz	clear_0
   167   0014F2                     end_of_initialization:
   168                           	callstack 0
   169   0014F2                     __end_of__initialization:
   170                           	callstack 0
   171   0014F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172   0014F4  6EF8               	movwf	tblptru,c
   173   0014F6  0100               	movlb	0
   174   0014F8  EF91  F00A         	goto	_main	;jump to C main() function
   175                           
   176                           	psect	bssCOMRAM
   177   000038                     __pbssCOMRAM:
   178                           	callstack 0
   179   000038                     relay_turn_off@F576:
   180                           	callstack 0
   181   000038                     	ds	1
   182   000039                     relay_turn_on@F571:
   183                           	callstack 0
   184   000039                     	ds	1
   185   00003A                     relay_initialize@F566:
   186                           	callstack 0
   187   00003A                     	ds	1
   188   00003B                     led_toggle@F587:
   189                           	callstack 0
   190   00003B                     	ds	1
   191   00003C                     led_turn_off@F582:
   192                           	callstack 0
   193   00003C                     	ds	1
   194   00003D                     led_turn_on@F577:
   195                           	callstack 0
   196   00003D                     	ds	1
   197   00003E                     led_initalize@F572:
   198                           	callstack 0
   199   00003E                     	ds	1
   200   00003F                     dc_motor_stop@F594:
   201                           	callstack 0
   202   00003F                     	ds	1
   203   000040                     dc_motor_stop@F592:
   204                           	callstack 0
   205   000040                     	ds	1
   206   000041                     dc_motor_move_left@F587:
   207                           	callstack 0
   208   000041                     	ds	1
   209   000042                     dc_motor_move_left@F585:
   210                           	callstack 0
   211   000042                     	ds	1
   212   000043                     dc_motor_move_right@F580:
   213                           	callstack 0
   214   000043                     	ds	1
   215   000044                     dc_motor_move_right@F578:
   216                           	callstack 0
   217   000044                     	ds	1
   218   000045                     dc_motor_initialize@F573:
   219                           	callstack 0
   220   000045                     	ds	1
   221   000046                     dc_motor_initialize@F571:
   222                           	callstack 0
   223   000046                     	ds	1
   224                           
   225                           	psect	dataCOMRAM
   226   000001                     __pdataCOMRAM:
   227                           	callstack 0
   228   000001                     _port_registers:
   229                           	callstack 0
   230   000001                     	ds	10
   231   00000B                     _lat_registers:
   232                           	callstack 0
   233   00000B                     	ds	10
   234   000015                     _tris_registers:
   235                           	callstack 0
   236   000015                     	ds	10
   237   00001F                     _keypad:
   238                           	callstack 0
   239   00001F                     	ds	8
   240                           
   241                           	psect	cstackCOMRAM
   242   000027                     __pcstackCOMRAM:
   243                           	callstack 0
   244   000027                     gpio_pin_direction_initalize@_pin_config:
   245                           	callstack 0
   246   000027                     gpio_pin_write_logic@_pin_config:
   247                           	callstack 0
   248   000027                     gpio_pin_read_logic@_pin_config:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x0
   252   000027                     	ds	1
   253   000028                     ??_gpio_pin_direction_initalize:
   254   000028                     gpio_pin_write_logic@logic:
   255                           	callstack 0
   256   000028                     gpio_pin_read_logic@logic:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260   000028                     	ds	1
   261   000029                     ??_gpio_pin_read_logic:
   262   000029                     ??_gpio_pin_write_logic:
   263                           
   264                           ; 1 bytes @ 0x2
   265   000029                     	ds	4
   266   00002D                     gpio_pin_direction_initalize@status:
   267                           	callstack 0
   268   00002D                     gpio_pin_read_logic@status:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272   00002D                     	ds	1
   273   00002E                     gpio_pin_write_logic@status:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277   00002E                     	ds	1
   278   00002F                     keypad_get_value@keypad:
   279                           	callstack 0
   280   00002F                     gpio_pin_initalize@_pin_config:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x8
   284   00002F                     	ds	1
   285   000030                     keypad_get_value@value:
   286                           	callstack 0
   287   000030                     gpio_pin_initalize@ret:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x9
   291   000030                     	ds	1
   292   000031                     ??_keypad_get_value:
   293   000031                     keypad_initalize@keypad:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0xA
   297   000031                     	ds	1
   298   000032                     keypad_initalize@ret:
   299                           	callstack 0
   300   000032                     keypad_get_value@ret:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xB
   304   000032                     	ds	1
   305   000033                     keypad_get_value@getValue:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xC
   309   000033                     	ds	1
   310   000034                     keypad_get_value@l_counter:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0xD
   314   000034                     	ds	1
   315   000035                     keypad_get_value@rows_counter:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xE
   319   000035                     	ds	1
   320   000036                     keypad_get_value@cols_counter:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xF
   324   000036                     	ds	1
   325   000037                     main@getValue:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x10
   329   000037                     	ds	1
   330                           
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 20 in file "application.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  getValue        1   16[COMRAM] unsigned char 
   341 ;;  ret             1    0        unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  2  263[None  ] int 
   344 ;; Registers used:
   345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;Total ram usage:        1 bytes
   356 ;; Hardware stack levels required when called: 3
   357 ;; This function calls:
   358 ;;		_keypad_get_value
   359 ;;		_keypad_initalize
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366   001522                     __ptext0:
   367                           	callstack 0
   368   001522                     _main:
   369                           	callstack 28
   370   001522                     
   371                           ;application.c: 22:     uint8 getValue=0;
   372   001522  0E00               	movlw	0
   373   001524  6E37               	movwf	main@getValue^0,c
   374   001526  0E1F               	movlw	low _keypad
   375   001528  6E31               	movwf	keypad_initalize@keypad^0,c
   376   00152A  EC08  F00A         	call	_keypad_initalize	;wreg free
   377   00152E                     l1867:
   378   00152E  0E1F               	movlw	low _keypad
   379   001530  6E2F               	movwf	keypad_get_value@keypad^0,c
   380   001532  0E37               	movlw	low main@getValue
   381   001534  6E30               	movwf	keypad_get_value@value^0,c
   382   001536  EC40  F009         	call	_keypad_get_value	;wreg free
   383   00153A  EF97  F00A         	goto	l1867
   384   00153E  EF00  F000         	goto	start
   385   001542                     __end_of_main:
   386                           	callstack 0
   387                           
   388 ;; *************** function _keypad_initalize *****************
   389 ;; Defined at:
   390 ;;		line 21 in file "ECU_layer/KEYPAD/ecu_keypad.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  keypad          1   10[COMRAM] PTR const struct .
   393 ;;		 -> keypad(8), 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  ret             1   11[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      unsigned char 
   398 ;; Registers used:
   399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		_gpio_pin_direction_initalize
   414 ;;		_gpio_pin_initalize
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text1
   421   001410                     __ptext1:
   422                           	callstack 0
   423   001410                     _keypad_initalize:
   424                           	callstack 28
   425   001410                     
   426                           ;ECU_layer/KEYPAD/ecu_keypad.c: 24:     if(((void*)0) == keypad)
   427   001410  5031               	movf	keypad_initalize@keypad^0,w,c
   428   001412  A4D8               	btfss	status,2,c
   429   001414  EF0E  F00A         	goto	u951
   430   001418  EF10  F00A         	goto	u950
   431   00141C                     u951:
   432   00141C  EF14  F00A         	goto	l1541
   433   001420                     u950:
   434   001420                     
   435                           ;ECU_layer/KEYPAD/ecu_keypad.c: 25:     {;ECU_layer/KEYPAD/ecu_keypad.c: 26:         ret
      +                          =(Std_ReturnType)0x00;
   436   001420  0E00               	movlw	0
   437   001422  6E32               	movwf	keypad_initalize@ret^0,c
   438                           
   439                           ;ECU_layer/KEYPAD/ecu_keypad.c: 27:     }
   440   001424  EF42  F00A         	goto	l1543
   441   001428                     l1541:
   442                           
   443                           ;ECU_layer/KEYPAD/ecu_keypad.c: 29:     {;ECU_layer/KEYPAD/ecu_keypad.c: 30:         ret
      +                          =gpio_pin_initalize(&(keypad->keypad_row_pins[0]));
   444   001428  C031  F02F         	movff	keypad_initalize@keypad,gpio_pin_initalize@_pin_config
   445   00142C  EC44  F00A         	call	_gpio_pin_initalize	;wreg free
   446   001430  6E32               	movwf	keypad_initalize@ret^0,c
   447                           
   448                           ;ECU_layer/KEYPAD/ecu_keypad.c: 31:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[1]));
   449   001432  2831               	incf	keypad_initalize@keypad^0,w,c
   450   001434  6E2F               	movwf	gpio_pin_initalize@_pin_config^0,c
   451   001436  EC44  F00A         	call	_gpio_pin_initalize	;wreg free
   452   00143A  6E32               	movwf	keypad_initalize@ret^0,c
   453                           
   454                           ;ECU_layer/KEYPAD/ecu_keypad.c: 32:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[2]));
   455   00143C  5031               	movf	keypad_initalize@keypad^0,w,c
   456   00143E  0F02               	addlw	2
   457   001440  6E2F               	movwf	gpio_pin_initalize@_pin_config^0,c
   458   001442  EC44  F00A         	call	_gpio_pin_initalize	;wreg free
   459   001446  6E32               	movwf	keypad_initalize@ret^0,c
   460                           
   461                           ;ECU_layer/KEYPAD/ecu_keypad.c: 33:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[3]));
   462   001448  5031               	movf	keypad_initalize@keypad^0,w,c
   463   00144A  0F03               	addlw	3
   464   00144C  6E2F               	movwf	gpio_pin_initalize@_pin_config^0,c
   465   00144E  EC44  F00A         	call	_gpio_pin_initalize	;wreg free
   466   001452  6E32               	movwf	keypad_initalize@ret^0,c
   467                           
   468                           ;ECU_layer/KEYPAD/ecu_keypad.c: 35:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[0]));
   469   001454  5031               	movf	keypad_initalize@keypad^0,w,c
   470   001456  0F04               	addlw	4
   471   001458  6E27               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   472   00145A  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   473   00145E  6E32               	movwf	keypad_initalize@ret^0,c
   474                           
   475                           ;ECU_layer/KEYPAD/ecu_keypad.c: 36:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[1]));
   476   001460  5031               	movf	keypad_initalize@keypad^0,w,c
   477   001462  0F05               	addlw	5
   478   001464  6E27               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   479   001466  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   480   00146A  6E32               	movwf	keypad_initalize@ret^0,c
   481                           
   482                           ;ECU_layer/KEYPAD/ecu_keypad.c: 37:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[2]));
   483   00146C  5031               	movf	keypad_initalize@keypad^0,w,c
   484   00146E  0F06               	addlw	6
   485   001470  6E27               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   486   001472  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   487   001476  6E32               	movwf	keypad_initalize@ret^0,c
   488                           
   489                           ;ECU_layer/KEYPAD/ecu_keypad.c: 38:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[3]));
   490   001478  5031               	movf	keypad_initalize@keypad^0,w,c
   491   00147A  0F07               	addlw	7
   492   00147C  6E27               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   493   00147E  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   494   001482  6E32               	movwf	keypad_initalize@ret^0,c
   495   001484                     l1543:
   496                           
   497                           ;ECU_layer/KEYPAD/ecu_keypad.c: 40:     return ret;
   498   001484  5032               	movf	keypad_initalize@ret^0,w,c
   499   001486  0012               	return		;funcret
   500   001488                     __end_of_keypad_initalize:
   501                           	callstack 0
   502                           
   503 ;; *************** function _gpio_pin_initalize *****************
   504 ;; Defined at:
   505 ;;		line 159 in file "MCAL_layer/GPIO/hal_gpio.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   508 ;;		 -> relay_initialize@pin(1), led_initalize@pin_init(1), keypad$keypad_row_pins(4), keypad(8), 
   509 ;;		 -> dc_motor_initialize@pin2(1), dc_motor_initialize@pin1(1), 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  ret             1    9[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      unsigned char 
   514 ;; Registers used:
   515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		_gpio_pin_direction_initalize
   530 ;;		_gpio_pin_write_logic
   531 ;; This function is called by:
   532 ;;		_keypad_initalize
   533 ;;		_dc_motor_initialize
   534 ;;		_led_initalize
   535 ;;		_relay_initialize
   536 ;;		_ssd_initalize
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text2
   541   001488                     __ptext2:
   542                           	callstack 0
   543   001488                     _gpio_pin_initalize:
   544                           	callstack 28
   545   001488                     
   546                           ;MCAL_layer/GPIO/hal_gpio.c: 162:     if(((void*)0) == _pin_config)
   547   001488  502F               	movf	gpio_pin_initalize@_pin_config^0,w,c
   548   00148A  A4D8               	btfss	status,2,c
   549   00148C  EF4A  F00A         	goto	u941
   550   001490  EF4C  F00A         	goto	u940
   551   001494                     u941:
   552   001494  EF50  F00A         	goto	l1531
   553   001498                     u940:
   554   001498                     
   555                           ;MCAL_layer/GPIO/hal_gpio.c: 163:     {;MCAL_layer/GPIO/hal_gpio.c: 164:         ret=(St
      +                          d_ReturnType)0x00;
   556   001498  0E00               	movlw	0
   557   00149A  6E30               	movwf	gpio_pin_initalize@ret^0,c
   558                           
   559                           ;MCAL_layer/GPIO/hal_gpio.c: 165:     }
   560   00149C  EF61  F00A         	goto	l1533
   561   0014A0                     l1531:
   562                           
   563                           ;MCAL_layer/GPIO/hal_gpio.c: 167:     {;MCAL_layer/GPIO/hal_gpio.c: 168:         ret=gpi
      +                          o_pin_direction_initalize(_pin_config);
   564   0014A0  C02F  F027         	movff	gpio_pin_initalize@_pin_config,gpio_pin_direction_initalize@_pin_config
   565   0014A4  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   566   0014A8  6E30               	movwf	gpio_pin_initalize@ret^0,c
   567                           
   568                           ;MCAL_layer/GPIO/hal_gpio.c: 169:         ret=gpio_pin_write_logic(_pin_config,_pin_conf
      +                          ig->logic);
   569   0014AA  C02F  F027         	movff	gpio_pin_initalize@_pin_config,gpio_pin_write_logic@_pin_config
   570   0014AE  502F               	movf	gpio_pin_initalize@_pin_config^0,w,c
   571   0014B0  6ED9               	movwf	fsr2l,c
   572   0014B2  6ADA               	clrf	fsr2h,c
   573   0014B4  0E00               	movlw	0
   574   0014B6  BEDF               	btfsc	indf2,7,c
   575   0014B8  0E01               	movlw	1
   576   0014BA  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   577   0014BC  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   578   0014C0  6E30               	movwf	gpio_pin_initalize@ret^0,c
   579   0014C2                     l1533:
   580                           
   581                           ;MCAL_layer/GPIO/hal_gpio.c: 171:     return ret;
   582   0014C2  5030               	movf	gpio_pin_initalize@ret^0,w,c
   583   0014C4  0012               	return		;funcret
   584   0014C6                     __end_of_gpio_pin_initalize:
   585                           	callstack 0
   586                           
   587 ;; *************** function _gpio_pin_direction_initalize *****************
   588 ;; Defined at:
   589 ;;		line 28 in file "MCAL_layer/GPIO/hal_gpio.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   592 ;;		 -> relay_initialize@pin(1), led_initalize@pin_init(1), keypad$keypad_col_pins(4), keypad$keypad_row_pins(4), 
   593 ;;		 -> keypad(8), dc_motor_initialize@pin2(1), dc_motor_initialize@pin1(1), 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  status          1    6[COMRAM] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      unsigned char 
   598 ;; Registers used:
   599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        7 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_keypad_initalize
   615 ;;		_gpio_pin_initalize
   616 ;;		_button_initialize
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text3
   621   001012                     __ptext3:
   622                           	callstack 0
   623   001012                     _gpio_pin_direction_initalize:
   624                           	callstack 28
   625   001012                     
   626                           ;MCAL_layer/GPIO/hal_gpio.c: 28: Std_ReturnType gpio_pin_direction_initalize(const pin_c
      +                          onfig_t* _pin_config);MCAL_layer/GPIO/hal_gpio.c: 29: {;MCAL_layer/GPIO/hal_gpio.c: 30: 
      +                              Std_ReturnType status=(Std_ReturnType)0x01;
   627   001012  0E01               	movlw	1
   628   001014  6E2D               	movwf	gpio_pin_direction_initalize@status^0,c
   629                           
   630                           ;MCAL_layer/GPIO/hal_gpio.c: 32:     if(((void*)0)==_pin_config || _pin_config->pin > 8 
      +                          -1 || _pin_config->port > 5 -1)
   631   001016  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   632   001018  B4D8               	btfsc	status,2,c
   633   00101A  EF11  F008         	goto	u771
   634   00101E  EF13  F008         	goto	u770
   635   001022                     u771:
   636   001022  EF31  F008         	goto	l1465
   637   001026                     u770:
   638   001026  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   639   001028  6ED9               	movwf	fsr2l,c
   640   00102A  6ADA               	clrf	fsr2h,c
   641   00102C  30DF               	rrcf	223,w,c
   642   00102E  32E8               	rrcf	wreg,f,c
   643   001030  32E8               	rrcf	wreg,f,c
   644   001032  0B07               	andlw	7
   645   001034  6E28               	movwf	??_gpio_pin_direction_initalize^0,c
   646   001036  0E08               	movlw	8
   647   001038  6028               	cpfslt	??_gpio_pin_direction_initalize^0,c
   648   00103A  EF21  F008         	goto	u781
   649   00103E  EF23  F008         	goto	u780
   650   001042                     u781:
   651   001042  EF31  F008         	goto	l1465
   652   001046                     u780:
   653   001046  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   654   001048  6ED9               	movwf	fsr2l,c
   655   00104A  6ADA               	clrf	fsr2h,c
   656   00104C  50DF               	movf	223,w,c
   657   00104E  0B07               	andlw	7
   658   001050  6E28               	movwf	??_gpio_pin_direction_initalize^0,c
   659   001052  0E04               	movlw	4
   660   001054  6428               	cpfsgt	??_gpio_pin_direction_initalize^0,c
   661   001056  EF2F  F008         	goto	u791
   662   00105A  EF31  F008         	goto	u790
   663   00105E                     u791:
   664   00105E  EF88  F008         	goto	l1475
   665   001062                     u790:
   666   001062                     l1465:
   667                           
   668                           ;MCAL_layer/GPIO/hal_gpio.c: 33:     {;MCAL_layer/GPIO/hal_gpio.c: 34:         status =(
      +                          Std_ReturnType)0x00;
   669   001062  0E00               	movlw	0
   670   001064  6E2D               	movwf	gpio_pin_direction_initalize@status^0,c
   671                           
   672                           ;MCAL_layer/GPIO/hal_gpio.c: 35:     }
   673   001066  EFA8  F008         	goto	l1477
   674   00106A                     l1467:
   675   00106A  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   676   00106C  6ED9               	movwf	fsr2l,c
   677   00106E  6ADA               	clrf	fsr2h,c
   678   001070  30DF               	rrcf	223,w,c
   679   001072  32E8               	rrcf	wreg,f,c
   680   001074  32E8               	rrcf	wreg,f,c
   681   001076  0B07               	andlw	7
   682   001078  6E28               	movwf	??_gpio_pin_direction_initalize^0,c
   683   00107A  0E01               	movlw	1
   684   00107C  6E29               	movwf	(??_gpio_pin_direction_initalize+1)^0,c
   685   00107E  2A28               	incf	??_gpio_pin_direction_initalize^0,f,c
   686   001080  EF44  F008         	goto	u804
   687   001084                     u805:
   688   001084  90D8               	bcf	status,0,c
   689   001086  3629               	rlcf	(??_gpio_pin_direction_initalize+1)^0,f,c
   690   001088                     u804:
   691   001088  2E28               	decfsz	??_gpio_pin_direction_initalize^0,f,c
   692   00108A  EF42  F008         	goto	u805
   693   00108E  5029               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   694   001090  0AFF               	xorlw	255
   695   001092  6E2A               	movwf	(??_gpio_pin_direction_initalize+2)^0,c
   696   001094  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   697   001096  6ED9               	movwf	fsr2l,c
   698   001098  6ADA               	clrf	fsr2h,c
   699   00109A  50DF               	movf	223,w,c
   700   00109C  0B07               	andlw	7
   701   00109E  0D02               	mullw	2
   702   0010A0  50F3               	movf	243,w,c
   703   0010A2  0F15               	addlw	low _tris_registers
   704   0010A4  6ED9               	movwf	fsr2l,c
   705   0010A6  6ADA               	clrf	fsr2h,c
   706   0010A8  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_initalize+3
   707   0010AC  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_initalize+4
   708   0010B0  C02B  FFD9         	movff	??_gpio_pin_direction_initalize+3,fsr2l
   709   0010B4  C02C  FFDA         	movff	??_gpio_pin_direction_initalize+4,fsr2h
   710   0010B8  502A               	movf	(??_gpio_pin_direction_initalize+2)^0,w,c
   711   0010BA  16DF               	andwf	indf2,f,c
   712                           
   713                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             break;
   714   0010BC  EFA8  F008         	goto	l1477
   715   0010C0                     l1469:
   716   0010C0  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   717   0010C2  6ED9               	movwf	fsr2l,c
   718   0010C4  6ADA               	clrf	fsr2h,c
   719   0010C6  30DF               	rrcf	223,w,c
   720   0010C8  32E8               	rrcf	wreg,f,c
   721   0010CA  32E8               	rrcf	wreg,f,c
   722   0010CC  0B07               	andlw	7
   723   0010CE  6E28               	movwf	??_gpio_pin_direction_initalize^0,c
   724   0010D0  0E01               	movlw	1
   725   0010D2  6E29               	movwf	(??_gpio_pin_direction_initalize+1)^0,c
   726   0010D4  2A28               	incf	??_gpio_pin_direction_initalize^0,f,c
   727   0010D6  EF6F  F008         	goto	u814
   728   0010DA                     u815:
   729   0010DA  90D8               	bcf	status,0,c
   730   0010DC  3629               	rlcf	(??_gpio_pin_direction_initalize+1)^0,f,c
   731   0010DE                     u814:
   732   0010DE  2E28               	decfsz	??_gpio_pin_direction_initalize^0,f,c
   733   0010E0  EF6D  F008         	goto	u815
   734   0010E4  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   735   0010E6  6ED9               	movwf	fsr2l,c
   736   0010E8  6ADA               	clrf	fsr2h,c
   737   0010EA  50DF               	movf	223,w,c
   738   0010EC  0B07               	andlw	7
   739   0010EE  0D02               	mullw	2
   740   0010F0  50F3               	movf	243,w,c
   741   0010F2  0F15               	addlw	low _tris_registers
   742   0010F4  6ED9               	movwf	fsr2l,c
   743   0010F6  6ADA               	clrf	fsr2h,c
   744   0010F8  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_initalize+2
   745   0010FC  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_initalize+3
   746   001100  C02A  FFD9         	movff	??_gpio_pin_direction_initalize+2,fsr2l
   747   001104  C02B  FFDA         	movff	??_gpio_pin_direction_initalize+3,fsr2h
   748   001108  5029               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   749   00110A  12DF               	iorwf	indf2,f,c
   750                           
   751                           ;MCAL_layer/GPIO/hal_gpio.c: 42:             break;
   752   00110C  EFA8  F008         	goto	l1477
   753   001110                     l1475:
   754   001110  5027               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   755   001112  6ED9               	movwf	fsr2l,c
   756   001114  6ADA               	clrf	fsr2h,c
   757   001116  BCDF               	btfsc	indf2,6,c
   758   001118  EF90  F008         	goto	u821
   759   00111C  EF93  F008         	goto	u820
   760   001120                     u821:
   761   001120  0E01               	movlw	1
   762   001122  EF94  F008         	goto	u830
   763   001126                     u820:
   764   001126  0E00               	movlw	0
   765   001128                     u830:
   766   001128  6E28               	movwf	??_gpio_pin_direction_initalize^0,c
   767   00112A  6A29               	clrf	(??_gpio_pin_direction_initalize+1)^0,c
   768                           
   769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   770                           ; Switch size 1, requested type "simple"
   771                           ; Number of cases is 1, Range of values is 0 to 0
   772                           ; switch strategies available:
   773                           ; Name         Instructions Cycles
   774                           ; simple_byte            4     3 (average)
   775                           ;	Chosen strategy is simple_byte
   776   00112C  5029               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   777   00112E  0A00               	xorlw	0	; case 0
   778   001130  B4D8               	btfsc	status,2,c
   779   001132  EF9D  F008         	goto	l1877
   780   001136  EF31  F008         	goto	l1465
   781   00113A                     l1877:
   782                           
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 2, Range of values is 0 to 1
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            7     4 (average)
   788                           ;	Chosen strategy is simple_byte
   789   00113A  5028               	movf	??_gpio_pin_direction_initalize^0,w,c
   790   00113C  0A00               	xorlw	0	; case 0
   791   00113E  B4D8               	btfsc	status,2,c
   792   001140  EF35  F008         	goto	l1467
   793   001144  0A01               	xorlw	1	; case 1
   794   001146  B4D8               	btfsc	status,2,c
   795   001148  EF60  F008         	goto	l1469
   796   00114C  EF31  F008         	goto	l1465
   797   001150                     l1477:
   798                           
   799                           ;MCAL_layer/GPIO/hal_gpio.c: 47:     return status;
   800   001150  502D               	movf	gpio_pin_direction_initalize@status^0,w,c
   801   001152  0012               	return		;funcret
   802   001154                     __end_of_gpio_pin_direction_initalize:
   803                           	callstack 0
   804                           
   805 ;; *************** function _keypad_get_value *****************
   806 ;; Defined at:
   807 ;;		line 43 in file "ECU_layer/KEYPAD/ecu_keypad.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  keypad          1    8[COMRAM] PTR const struct .
   810 ;;		 -> keypad(8), 
   811 ;;  value           1    9[COMRAM] PTR unsigned char 
   812 ;;		 -> main@getValue(1), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  cols_counter    1   15[COMRAM] unsigned char 
   815 ;;  rows_counter    1   14[COMRAM] unsigned char 
   816 ;;  l_counter       1   13[COMRAM] unsigned char 
   817 ;;  getValue        1   12[COMRAM] unsigned char 
   818 ;;  ret             1   11[COMRAM] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      unsigned char 
   821 ;; Registers used:
   822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		_gpio_pin_read_logic
   837 ;;		_gpio_pin_write_logic
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844   001280                     __ptext4:
   845                           	callstack 0
   846   001280                     _keypad_get_value:
   847                           	callstack 29
   848   001280                     
   849                           ;ECU_layer/KEYPAD/ecu_keypad.c: 46:     uint8 rows_counter,cols_counter,l_counter,getVal
      +                          ue;;ECU_layer/KEYPAD/ecu_keypad.c: 47:     if (((void*)0) == keypad || ((void*)0) == val
      +                          ue)
   850   001280  502F               	movf	keypad_get_value@keypad^0,w,c
   851   001282  B4D8               	btfsc	status,2,c
   852   001284  EF46  F009         	goto	u961
   853   001288  EF48  F009         	goto	u960
   854   00128C                     u961:
   855   00128C  EF50  F009         	goto	l1551
   856   001290                     u960:
   857   001290  5030               	movf	keypad_get_value@value^0,w,c
   858   001292  A4D8               	btfss	status,2,c
   859   001294  EF4E  F009         	goto	u971
   860   001298  EF50  F009         	goto	u970
   861   00129C                     u971:
   862   00129C  EF54  F009         	goto	l1553
   863   0012A0                     u970:
   864   0012A0                     l1551:
   865                           
   866                           ;ECU_layer/KEYPAD/ecu_keypad.c: 48:     {;ECU_layer/KEYPAD/ecu_keypad.c: 49:         ret
      +                           = (Std_ReturnType)0x00;
   867   0012A0  0E00               	movlw	0
   868   0012A2  6E32               	movwf	keypad_get_value@ret^0,c
   869                           
   870                           ;ECU_layer/KEYPAD/ecu_keypad.c: 50:     }
   871   0012A4  EFA6  F009         	goto	l1593
   872   0012A8                     l1553:
   873                           
   874                           ;ECU_layer/KEYPAD/ecu_keypad.c: 52:     {;ECU_layer/KEYPAD/ecu_keypad.c: 53:         for
      +                          (rows_counter=0;rows_counter<4;rows_counter++)
   875   0012A8  0E00               	movlw	0
   876   0012AA  6E35               	movwf	keypad_get_value@rows_counter^0,c
   877   0012AC                     l1559:
   878                           
   879                           ;ECU_layer/KEYPAD/ecu_keypad.c: 54:         {;ECU_layer/KEYPAD/ecu_keypad.c: 56:        
      +                               for(l_counter=0;l_counter<4;l_counter++)
   880   0012AC  0E00               	movlw	0
   881   0012AE  6E34               	movwf	keypad_get_value@l_counter^0,c
   882   0012B0                     l1565:
   883   0012B0  502F               	movf	keypad_get_value@keypad^0,w,c
   884   0012B2  2434               	addwf	keypad_get_value@l_counter^0,w,c
   885   0012B4  0F04               	addlw	4
   886   0012B6  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   887   0012B8  0E00               	movlw	0
   888   0012BA  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   889   0012BC  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   890   0012C0                     
   891                           ;ECU_layer/KEYPAD/ecu_keypad.c: 59:             }
   892   0012C0  2A34               	incf	keypad_get_value@l_counter^0,f,c
   893   0012C2  0E03               	movlw	3
   894   0012C4  6434               	cpfsgt	keypad_get_value@l_counter^0,c
   895   0012C6  EF67  F009         	goto	u981
   896   0012CA  EF69  F009         	goto	u980
   897   0012CE                     u981:
   898   0012CE  EF58  F009         	goto	l1565
   899   0012D2                     u980:
   900   0012D2  502F               	movf	keypad_get_value@keypad^0,w,c
   901   0012D4  2435               	addwf	keypad_get_value@rows_counter^0,w,c
   902   0012D6  0F04               	addlw	4
   903   0012D8  6E27               	movwf	gpio_pin_write_logic@_pin_config^0,c
   904   0012DA  0E01               	movlw	1
   905   0012DC  6E28               	movwf	gpio_pin_write_logic@logic^0,c
   906   0012DE  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   907   0012E2                     
   908                           ;ECU_layer/KEYPAD/ecu_keypad.c: 63:             for(cols_counter=0;cols_counter<4;cols_c
      +                          ounter++)
   909   0012E2  0E00               	movlw	0
   910   0012E4  6E36               	movwf	keypad_get_value@cols_counter^0,c
   911   0012E6                     l1579:
   912                           
   913                           ;ECU_layer/KEYPAD/ecu_keypad.c: 64:             {;ECU_layer/KEYPAD/ecu_keypad.c: 65:    
      +                                       ret=gpio_pin_read_logic(&(keypad->keypad_col_pins[cols_counter]),&getValue)
      +                          ;
   914   0012E6  502F               	movf	keypad_get_value@keypad^0,w,c
   915   0012E8  2436               	addwf	keypad_get_value@cols_counter^0,w,c
   916   0012EA  0F04               	addlw	4
   917   0012EC  6E27               	movwf	gpio_pin_read_logic@_pin_config^0,c
   918   0012EE  0E33               	movlw	low keypad_get_value@getValue
   919   0012F0  6E28               	movwf	gpio_pin_read_logic@logic^0,c
   920   0012F2  ECA8  F009         	call	_gpio_pin_read_logic	;wreg free
   921   0012F6  6E32               	movwf	keypad_get_value@ret^0,c
   922   0012F8                     
   923                           ;ECU_layer/KEYPAD/ecu_keypad.c: 66:                 if(HIGH ==getValue)
   924   0012F8  0433               	decf	keypad_get_value@getValue^0,w,c
   925   0012FA  A4D8               	btfss	status,2,c
   926   0012FC  EF82  F009         	goto	u991
   927   001300  EF84  F009         	goto	u990
   928   001304                     u991:
   929   001304  EF94  F009         	goto	l1585
   930   001308                     u990:
   931   001308                     
   932                           ;ECU_layer/KEYPAD/ecu_keypad.c: 67:                 {;ECU_layer/KEYPAD/ecu_keypad.c: 68:
      +                                               *value=btn_values[rows_counter][cols_counter];
   933   001308  5035               	movf	keypad_get_value@rows_counter^0,w,c
   934   00130A  0D04               	mullw	4
   935   00130C  50F3               	movf	243,w,c
   936   00130E  0F01               	addlw	low _btn_values
   937   001310  2436               	addwf	keypad_get_value@cols_counter^0,w,c
   938   001312  6E31               	movwf	??_keypad_get_value^0,c
   939   001314  C031  FFF6         	movff	??_keypad_get_value,tblptrl
   940   001318                     	if	1	;There is more than 1 active tblptr byte
   941   001318  0E10               	movlw	high __smallconst
   942   00131A  6EF7               	movwf	tblptrh,c
   943   00131C                     	endif
   944   00131C                     	if	0	;tblptru may be non-zero
   945   00131C                     	endif
   946   00131C                     	if	0	;tblptru may be non-zero
   947   00131C                     	endif
   948   00131C  5030               	movf	keypad_get_value@value^0,w,c
   949   00131E  6ED9               	movwf	fsr2l,c
   950   001320  6ADA               	clrf	fsr2h,c
   951   001322  0008               	tblrd		*
   952   001324  CFF5 FFDF          	movff	tablat,indf2
   953   001328                     l1585:
   954                           
   955                           ;ECU_layer/KEYPAD/ecu_keypad.c: 70:             }
   956   001328  2A36               	incf	keypad_get_value@cols_counter^0,f,c
   957   00132A  0E03               	movlw	3
   958   00132C  6436               	cpfsgt	keypad_get_value@cols_counter^0,c
   959   00132E  EF9B  F009         	goto	u1001
   960   001332  EF9D  F009         	goto	u1000
   961   001336                     u1001:
   962   001336  EF73  F009         	goto	l1579
   963   00133A                     u1000:
   964   00133A                     
   965                           ;ECU_layer/KEYPAD/ecu_keypad.c: 72:         }
   966   00133A  2A35               	incf	keypad_get_value@rows_counter^0,f,c
   967   00133C  0E03               	movlw	3
   968   00133E  6435               	cpfsgt	keypad_get_value@rows_counter^0,c
   969   001340  EFA4  F009         	goto	u1011
   970   001344  EFA6  F009         	goto	u1010
   971   001348                     u1011:
   972   001348  EF56  F009         	goto	l1559
   973   00134C                     u1010:
   974   00134C                     l1593:
   975                           
   976                           ;ECU_layer/KEYPAD/ecu_keypad.c: 74:     return ret;
   977   00134C  5032               	movf	keypad_get_value@ret^0,w,c
   978   00134E  0012               	return		;funcret
   979   001350                     __end_of_keypad_get_value:
   980                           	callstack 0
   981                           
   982 ;; *************** function _gpio_pin_write_logic *****************
   983 ;; Defined at:
   984 ;;		line 82 in file "MCAL_layer/GPIO/hal_gpio.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   987 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), led_turn_off@pin_init(1), 
   988 ;;		 -> led_turn_on@pin_init(1), led_initalize@pin_init(1), keypad$keypad_col_pins(4), keypad$keypad_row_pins(4), 
   989 ;;		 -> keypad(8), dc_motor_stop@pin2(1), dc_motor_stop@pin1(1), dc_motor_move_left@pin2(1), 
   990 ;;		 -> dc_motor_move_left@pin1(1), dc_motor_move_right@pin2(1), dc_motor_move_right@pin1(1), dc_motor_initialize@pin2(1
      +), 
   991 ;;		 -> dc_motor_initialize@pin1(1), 
   992 ;;  logic           1    1[COMRAM] enum E492
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  status          1    7[COMRAM] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      unsigned char 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        8 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_keypad_get_value
  1014 ;;		_gpio_pin_initalize
  1015 ;;		_dc_motor_move_right
  1016 ;;		_dc_motor_move_left
  1017 ;;		_dc_motor_stop
  1018 ;;		_led_turn_on
  1019 ;;		_led_turn_off
  1020 ;;		_relay_turn_on
  1021 ;;		_relay_turn_off
  1022 ;;		_ssd_write_number
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text5
  1027   001154                     __ptext5:
  1028                           	callstack 0
  1029   001154                     _gpio_pin_write_logic:
  1030                           	callstack 28
  1031   001154                     
  1032                           ;MCAL_layer/GPIO/hal_gpio.c: 82: Std_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config,logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 83: {;MCAL_layer/GPIO/hal_gpio.c
      +                          : 84:     Std_ReturnType status=(Std_ReturnType)0x01;
  1033   001154  0E01               	movlw	1
  1034   001156  6E2E               	movwf	gpio_pin_write_logic@status^0,c
  1035                           
  1036                           ;MCAL_layer/GPIO/hal_gpio.c: 85:     if(((void*)0)==_pin_config || _pin_config->pin > 8 
      +                          -1 || _pin_config->port > 5 -1)
  1037   001158  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1038   00115A  B4D8               	btfsc	status,2,c
  1039   00115C  EFB2  F008         	goto	u841
  1040   001160  EFB4  F008         	goto	u840
  1041   001164                     u841:
  1042   001164  EFD2  F008         	goto	l1491
  1043   001168                     u840:
  1044   001168  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1045   00116A  6ED9               	movwf	fsr2l,c
  1046   00116C  6ADA               	clrf	fsr2h,c
  1047   00116E  30DF               	rrcf	223,w,c
  1048   001170  32E8               	rrcf	wreg,f,c
  1049   001172  32E8               	rrcf	wreg,f,c
  1050   001174  0B07               	andlw	7
  1051   001176  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1052   001178  0E08               	movlw	8
  1053   00117A  6029               	cpfslt	??_gpio_pin_write_logic^0,c
  1054   00117C  EFC2  F008         	goto	u851
  1055   001180  EFC4  F008         	goto	u850
  1056   001184                     u851:
  1057   001184  EFD2  F008         	goto	l1491
  1058   001188                     u850:
  1059   001188  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1060   00118A  6ED9               	movwf	fsr2l,c
  1061   00118C  6ADA               	clrf	fsr2h,c
  1062   00118E  50DF               	movf	223,w,c
  1063   001190  0B07               	andlw	7
  1064   001192  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1065   001194  0E04               	movlw	4
  1066   001196  6429               	cpfsgt	??_gpio_pin_write_logic^0,c
  1067   001198  EFD0  F008         	goto	u861
  1068   00119C  EFD2  F008         	goto	u860
  1069   0011A0                     u861:
  1070   0011A0  EF29  F009         	goto	l1501
  1071   0011A4                     u860:
  1072   0011A4                     l1491:
  1073                           
  1074                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     {;MCAL_layer/GPIO/hal_gpio.c: 87:         status=(S
      +                          td_ReturnType)0x00;
  1075   0011A4  0E00               	movlw	0
  1076   0011A6  6E2E               	movwf	gpio_pin_write_logic@status^0,c
  1077                           
  1078                           ;MCAL_layer/GPIO/hal_gpio.c: 88:     }
  1079   0011A8  EF3E  F009         	goto	l1503
  1080   0011AC                     l1493:
  1081                           
  1082                           ;MCAL_layer/GPIO/hal_gpio.c: 93:             (*lat_registers[_pin_config->port]|=((uint8
      +                          )0x01<<_pin_config->pin));
  1083   0011AC  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1084   0011AE  6ED9               	movwf	fsr2l,c
  1085   0011B0  6ADA               	clrf	fsr2h,c
  1086   0011B2  30DF               	rrcf	223,w,c
  1087   0011B4  32E8               	rrcf	wreg,f,c
  1088   0011B6  32E8               	rrcf	wreg,f,c
  1089   0011B8  0B07               	andlw	7
  1090   0011BA  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1091   0011BC  0E01               	movlw	1
  1092   0011BE  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1093   0011C0  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1094   0011C2  EFE5  F008         	goto	u874
  1095   0011C6                     u875:
  1096   0011C6  90D8               	bcf	status,0,c
  1097   0011C8  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1098   0011CA                     u874:
  1099   0011CA  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1100   0011CC  EFE3  F008         	goto	u875
  1101   0011D0  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1102   0011D2  6ED9               	movwf	fsr2l,c
  1103   0011D4  6ADA               	clrf	fsr2h,c
  1104   0011D6  50DF               	movf	223,w,c
  1105   0011D8  0B07               	andlw	7
  1106   0011DA  0D02               	mullw	2
  1107   0011DC  50F3               	movf	243,w,c
  1108   0011DE  0F0B               	addlw	low _lat_registers
  1109   0011E0  6ED9               	movwf	fsr2l,c
  1110   0011E2  6ADA               	clrf	fsr2h,c
  1111   0011E4  CFDE F02B          	movff	postinc2,??_gpio_pin_write_logic+2
  1112   0011E8  CFDD F02C          	movff	postdec2,??_gpio_pin_write_logic+3
  1113   0011EC  C02B  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1114   0011F0  C02C  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1115   0011F4  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1116   0011F6  12DF               	iorwf	indf2,f,c
  1117                           
  1118                           ;MCAL_layer/GPIO/hal_gpio.c: 94:             break;
  1119   0011F8  EF3E  F009         	goto	l1503
  1120   0011FC                     l1495:
  1121                           
  1122                           ;MCAL_layer/GPIO/hal_gpio.c: 97:             (*lat_registers[_pin_config->port]&=~((uint
      +                          8)0x01<<_pin_config->pin));
  1123   0011FC  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1124   0011FE  6ED9               	movwf	fsr2l,c
  1125   001200  6ADA               	clrf	fsr2h,c
  1126   001202  30DF               	rrcf	223,w,c
  1127   001204  32E8               	rrcf	wreg,f,c
  1128   001206  32E8               	rrcf	wreg,f,c
  1129   001208  0B07               	andlw	7
  1130   00120A  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1131   00120C  0E01               	movlw	1
  1132   00120E  6E2A               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1133   001210  2A29               	incf	??_gpio_pin_write_logic^0,f,c
  1134   001212  EF0D  F009         	goto	u884
  1135   001216                     u885:
  1136   001216  90D8               	bcf	status,0,c
  1137   001218  362A               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1138   00121A                     u884:
  1139   00121A  2E29               	decfsz	??_gpio_pin_write_logic^0,f,c
  1140   00121C  EF0B  F009         	goto	u885
  1141   001220  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1142   001222  0AFF               	xorlw	255
  1143   001224  6E2B               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1144   001226  5027               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1145   001228  6ED9               	movwf	fsr2l,c
  1146   00122A  6ADA               	clrf	fsr2h,c
  1147   00122C  50DF               	movf	223,w,c
  1148   00122E  0B07               	andlw	7
  1149   001230  0D02               	mullw	2
  1150   001232  50F3               	movf	243,w,c
  1151   001234  0F0B               	addlw	low _lat_registers
  1152   001236  6ED9               	movwf	fsr2l,c
  1153   001238  6ADA               	clrf	fsr2h,c
  1154   00123A  CFDE F02C          	movff	postinc2,??_gpio_pin_write_logic+3
  1155   00123E  CFDD F02D          	movff	postdec2,??_gpio_pin_write_logic+4
  1156   001242  C02C  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1157   001246  C02D  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1158   00124A  502B               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1159   00124C  16DF               	andwf	indf2,f,c
  1160                           
  1161                           ;MCAL_layer/GPIO/hal_gpio.c: 98:             break;
  1162   00124E  EF3E  F009         	goto	l1503
  1163   001252                     l1501:
  1164   001252  5028               	movf	gpio_pin_write_logic@logic^0,w,c
  1165   001254  6E29               	movwf	??_gpio_pin_write_logic^0,c
  1166   001256  6A2A               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175   001258  502A               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1176   00125A  0A00               	xorlw	0	; case 0
  1177   00125C  B4D8               	btfsc	status,2,c
  1178   00125E  EF33  F009         	goto	l1879
  1179   001262  EFD2  F008         	goto	l1491
  1180   001266                     l1879:
  1181                           
  1182                           ; Switch size 1, requested type "simple"
  1183                           ; Number of cases is 2, Range of values is 0 to 1
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte            7     4 (average)
  1187                           ;	Chosen strategy is simple_byte
  1188   001266  5029               	movf	??_gpio_pin_write_logic^0,w,c
  1189   001268  0A00               	xorlw	0	; case 0
  1190   00126A  B4D8               	btfsc	status,2,c
  1191   00126C  EFFE  F008         	goto	l1495
  1192   001270  0A01               	xorlw	1	; case 1
  1193   001272  B4D8               	btfsc	status,2,c
  1194   001274  EFD6  F008         	goto	l1493
  1195   001278  EFD2  F008         	goto	l1491
  1196   00127C                     l1503:
  1197                           
  1198                           ;MCAL_layer/GPIO/hal_gpio.c: 104:     return status;
  1199   00127C  502E               	movf	gpio_pin_write_logic@status^0,w,c
  1200   00127E  0012               	return		;funcret
  1201   001280                     __end_of_gpio_pin_write_logic:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _gpio_pin_read_logic *****************
  1205 ;; Defined at:
  1206 ;;		line 116 in file "MCAL_layer/GPIO/hal_gpio.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1209 ;;		 -> keypad$keypad_col_pins(4), keypad(8), 
  1210 ;;  logic           1    1[COMRAM] PTR enum E492
  1211 ;;		 -> keypad_get_value@getValue(1), button_read_state@pin_logic(1), 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  status          1    6[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      unsigned char 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;Total ram usage:        7 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_keypad_get_value
  1233 ;;		_button_read_state
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text6
  1238   001350                     __ptext6:
  1239                           	callstack 0
  1240   001350                     _gpio_pin_read_logic:
  1241                           	callstack 29
  1242   001350                     
  1243                           ;MCAL_layer/GPIO/hal_gpio.c: 116: Std_ReturnType gpio_pin_read_logic(const pin_config_t*
      +                           _pin_config,logic_t *logic);MCAL_layer/GPIO/hal_gpio.c: 117: {;MCAL_layer/GPIO/hal_gpio
      +                          .c: 118:     Std_ReturnType status=(Std_ReturnType)0x01;
  1244   001350  0E01               	movlw	1
  1245   001352  6E2D               	movwf	gpio_pin_read_logic@status^0,c
  1246                           
  1247                           ;MCAL_layer/GPIO/hal_gpio.c: 119:     if(((void*)0)==_pin_config || ((void*)0) == logic 
      +                          || _pin_config->pin > 8 -1 || _pin_config->port > 5 -1)
  1248   001354  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1249   001356  B4D8               	btfsc	status,2,c
  1250   001358  EFB0  F009         	goto	u891
  1251   00135C  EFB2  F009         	goto	u890
  1252   001360                     u891:
  1253   001360  EFD8  F009         	goto	l1519
  1254   001364                     u890:
  1255   001364  5028               	movf	gpio_pin_read_logic@logic^0,w,c
  1256   001366  B4D8               	btfsc	status,2,c
  1257   001368  EFB8  F009         	goto	u901
  1258   00136C  EFBA  F009         	goto	u900
  1259   001370                     u901:
  1260   001370  EFD8  F009         	goto	l1519
  1261   001374                     u900:
  1262   001374  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1263   001376  6ED9               	movwf	fsr2l,c
  1264   001378  6ADA               	clrf	fsr2h,c
  1265   00137A  30DF               	rrcf	223,w,c
  1266   00137C  32E8               	rrcf	wreg,f,c
  1267   00137E  32E8               	rrcf	wreg,f,c
  1268   001380  0B07               	andlw	7
  1269   001382  6E29               	movwf	??_gpio_pin_read_logic^0,c
  1270   001384  0E08               	movlw	8
  1271   001386  6029               	cpfslt	??_gpio_pin_read_logic^0,c
  1272   001388  EFC8  F009         	goto	u911
  1273   00138C  EFCA  F009         	goto	u910
  1274   001390                     u911:
  1275   001390  EFD8  F009         	goto	l1519
  1276   001394                     u910:
  1277   001394  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1278   001396  6ED9               	movwf	fsr2l,c
  1279   001398  6ADA               	clrf	fsr2h,c
  1280   00139A  50DF               	movf	223,w,c
  1281   00139C  0B07               	andlw	7
  1282   00139E  6E29               	movwf	??_gpio_pin_read_logic^0,c
  1283   0013A0  0E04               	movlw	4
  1284   0013A2  6429               	cpfsgt	??_gpio_pin_read_logic^0,c
  1285   0013A4  EFD6  F009         	goto	u921
  1286   0013A8  EFD8  F009         	goto	u920
  1287   0013AC                     u921:
  1288   0013AC  EFDC  F009         	goto	l1521
  1289   0013B0                     u920:
  1290   0013B0                     l1519:
  1291                           
  1292                           ;MCAL_layer/GPIO/hal_gpio.c: 120:     {;MCAL_layer/GPIO/hal_gpio.c: 121:         status=
      +                          (Std_ReturnType)0x00;
  1293   0013B0  0E00               	movlw	0
  1294   0013B2  6E2D               	movwf	gpio_pin_read_logic@status^0,c
  1295                           
  1296                           ;MCAL_layer/GPIO/hal_gpio.c: 122:     }
  1297   0013B4  EF06  F00A         	goto	l1523
  1298   0013B8                     l1521:
  1299                           
  1300                           ;MCAL_layer/GPIO/hal_gpio.c: 124:         *logic=(*port_registers[_pin_config->port] >> 
      +                          _pin_config->pin) & (uint8)0x01;
  1301   0013B8  5028               	movf	gpio_pin_read_logic@logic^0,w,c
  1302   0013BA  6ED9               	movwf	fsr2l,c
  1303   0013BC  6ADA               	clrf	fsr2h,c
  1304   0013BE  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1305   0013C0  6EE1               	movwf	fsr1l,c
  1306   0013C2  6AE2               	clrf	fsr1h,c
  1307   0013C4  30E7               	rrcf	231,w,c
  1308   0013C6  32E8               	rrcf	wreg,f,c
  1309   0013C8  32E8               	rrcf	wreg,f,c
  1310   0013CA  0B07               	andlw	7
  1311   0013CC  6E29               	movwf	??_gpio_pin_read_logic^0,c
  1312   0013CE  5027               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1313   0013D0  6EE1               	movwf	fsr1l,c
  1314   0013D2  6AE2               	clrf	fsr1h,c
  1315   0013D4  50E7               	movf	231,w,c
  1316   0013D6  0B07               	andlw	7
  1317   0013D8  0D02               	mullw	2
  1318   0013DA  50F3               	movf	243,w,c
  1319   0013DC  0F01               	addlw	low _port_registers
  1320   0013DE  6EE1               	movwf	fsr1l,c
  1321   0013E0  6AE2               	clrf	fsr1h,c
  1322   0013E2  CFE6 F02A          	movff	postinc1,??_gpio_pin_read_logic+1
  1323   0013E6  CFE5 F02B          	movff	postdec1,??_gpio_pin_read_logic+2
  1324   0013EA  C02A  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  1325   0013EE  C02B  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  1326   0013F2  50E7               	movf	indf1,w,c
  1327   0013F4  6E2C               	movwf	(??_gpio_pin_read_logic+3)^0,c
  1328   0013F6  2A29               	incf	??_gpio_pin_read_logic^0,f,c
  1329   0013F8  EF00  F00A         	goto	u934
  1330   0013FC                     u935:
  1331   0013FC  90D8               	bcf	status,0,c
  1332   0013FE  322C               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  1333   001400                     u934:
  1334   001400  2E29               	decfsz	??_gpio_pin_read_logic^0,f,c
  1335   001402  EFFE  F009         	goto	u935
  1336   001406  502C               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  1337   001408  0B01               	andlw	1
  1338   00140A  6EDF               	movwf	indf2,c
  1339   00140C                     l1523:
  1340                           
  1341                           ;MCAL_layer/GPIO/hal_gpio.c: 126:     return status;
  1342   00140C  502D               	movf	gpio_pin_read_logic@status^0,w,c
  1343   00140E  0012               	return		;funcret
  1344   001410                     __end_of_gpio_pin_read_logic:
  1345                           	callstack 0
  1346                           
  1347                           	psect	rparam
  1348   000000                     
  1349                           	psect	config
  1350                           
  1351                           ; Padding undefined space
  1352   300000                     	org	3145728
  1353   300000  FF                 	db	255
  1354                           
  1355                           ;Config register CONFIG1H @ 0x300001
  1356                           ;	Oscillator Selection bits
  1357                           ;	OSC = HS, HS oscillator
  1358                           ;	Fail-Safe Clock Monitor Enable bit
  1359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1360                           ;	Internal/External Oscillator Switchover bit
  1361                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1362   300001                     	org	3145729
  1363   300001  02                 	db	2
  1364                           
  1365                           ;Config register CONFIG2L @ 0x300002
  1366                           ;	Power-up Timer Enable bit
  1367                           ;	PWRT = OFF, PWRT disabled
  1368                           ;	Brown-out Reset Enable bits
  1369                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1370                           ;	Brown Out Reset Voltage bits
  1371                           ;	BORV = 1, 
  1372   300002                     	org	3145730
  1373   300002  09                 	db	9
  1374                           
  1375                           ;Config register CONFIG2H @ 0x300003
  1376                           ;	Watchdog Timer Enable bit
  1377                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1378                           ;	Watchdog Timer Postscale Select bits
  1379                           ;	WDTPS = 32768, 1:32768
  1380   300003                     	org	3145731
  1381   300003  1E                 	db	30
  1382                           
  1383                           ; Padding undefined space
  1384   300004                     	org	3145732
  1385   300004  FF                 	db	255
  1386                           
  1387                           ;Config register CONFIG3H @ 0x300005
  1388                           ;	CCP2 MUX bit
  1389                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1390                           ;	PORTB A/D Enable bit
  1391                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1392                           ;	Low-Power Timer1 Oscillator Enable bit
  1393                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1394                           ;	MCLR Pin Enable bit
  1395                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1396   300005                     	org	3145733
  1397   300005  81                 	db	129
  1398                           
  1399                           ;Config register CONFIG4L @ 0x300006
  1400                           ;	Stack Full/Underflow Reset Enable bit
  1401                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1402                           ;	Single-Supply ICSP Enable bit
  1403                           ;	LVP = OFF, Single-Supply ICSP disabled
  1404                           ;	Extended Instruction Set Enable bit
  1405                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1406                           ;	Background Debugger Enable bit
  1407                           ;	DEBUG = 0x1, unprogrammed default
  1408   300006                     	org	3145734
  1409   300006  81                 	db	129
  1410                           
  1411                           ; Padding undefined space
  1412   300007                     	org	3145735
  1413   300007  FF                 	db	255
  1414                           
  1415                           ;Config register CONFIG5L @ 0x300008
  1416                           ;	Code Protection bit
  1417                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1418                           ;	Code Protection bit
  1419                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1420                           ;	Code Protection bit
  1421                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1422                           ;	Code Protection bit
  1423                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1424   300008                     	org	3145736
  1425   300008  0F                 	db	15
  1426                           
  1427                           ;Config register CONFIG5H @ 0x300009
  1428                           ;	Boot Block Code Protection bit
  1429                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1430                           ;	Data EEPROM Code Protection bit
  1431                           ;	CPD = OFF, Data EEPROM not code-protected
  1432   300009                     	org	3145737
  1433   300009  C0                 	db	192
  1434                           
  1435                           ;Config register CONFIG6L @ 0x30000A
  1436                           ;	Write Protection bit
  1437                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1438                           ;	Write Protection bit
  1439                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1440                           ;	Write Protection bit
  1441                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1442                           ;	Write Protection bit
  1443                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1444   30000A                     	org	3145738
  1445   30000A  0F                 	db	15
  1446                           
  1447                           ;Config register CONFIG6H @ 0x30000B
  1448                           ;	Configuration Register Write Protection bit
  1449                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1450                           ;	Boot Block Write Protection bit
  1451                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1452                           ;	Data EEPROM Write Protection bit
  1453                           ;	WRTD = OFF, Data EEPROM not write-protected
  1454   30000B                     	org	3145739
  1455   30000B  E0                 	db	224
  1456                           
  1457                           ;Config register CONFIG7L @ 0x30000C
  1458                           ;	Table Read Protection bit
  1459                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1460                           ;	Table Read Protection bit
  1461                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1462                           ;	Table Read Protection bit
  1463                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1464                           ;	Table Read Protection bit
  1465                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1466   30000C                     	org	3145740
  1467   30000C  0F                 	db	15
  1468                           
  1469                           ;Config register CONFIG7H @ 0x30000D
  1470                           ;	Boot Block Table Read Protection bit
  1471                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1472   30000D                     	org	3145741
  1473   30000D  40                 	db	64
  1474                           tosu	equ	0xFFF
  1475                           tosh	equ	0xFFE
  1476                           tosl	equ	0xFFD
  1477                           stkptr	equ	0xFFC
  1478                           pclatu	equ	0xFFB
  1479                           pclath	equ	0xFFA
  1480                           pcl	equ	0xFF9
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           indf0	equ	0xFEF
  1488                           postinc0	equ	0xFEE
  1489                           postdec0	equ	0xFED
  1490                           preinc0	equ	0xFEC
  1491                           plusw0	equ	0xFEB
  1492                           fsr0h	equ	0xFEA
  1493                           fsr0l	equ	0xFE9
  1494                           wreg	equ	0xFE8
  1495                           indf1	equ	0xFE7
  1496                           postinc1	equ	0xFE6
  1497                           postdec1	equ	0xFE5
  1498                           preinc1	equ	0xFE4
  1499                           plusw1	equ	0xFE3
  1500                           fsr1h	equ	0xFE2
  1501                           fsr1l	equ	0xFE1
  1502                           bsr	equ	0xFE0
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           postdec2	equ	0xFDD
  1506                           preinc2	equ	0xFDC
  1507                           plusw2	equ	0xFDB
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        38
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      70
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initalize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_col_pins(COMRAM[4]), 
		 -> keypad$keypad_row_pins(COMRAM[4]), led_initalize@pin_init(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_initalize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_row_pins(COMRAM[4]), 
		 -> led_initalize@pin_init(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), keypad$keypad_col_pins(COMRAM[4]), 

    gpio_pin_read_logic@logic	PTR enum E492 size(1) Largest target is 1
		 -> button_read_state@pin_logic(COMRAM[1]), keypad_get_value@getValue(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), dc_motor_move_left@pin1(COMRAM[1]), dc_motor_move_left@pin2(COMRAM[1]), 
		 -> dc_motor_move_right@pin1(COMRAM[1]), dc_motor_move_right@pin2(COMRAM[1]), dc_motor_stop@pin1(COMRAM[1]), dc_motor_stop@pin2(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_col_pins(COMRAM[4]), keypad$keypad_row_pins(COMRAM[4]), led_initalize@pin_init(COMRAM[1]), 
		 -> led_turn_off@pin_init(COMRAM[1]), led_turn_on@pin_init(COMRAM[1]), relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), 
		 -> relay_turn_on@pin(COMRAM[1]), 

    keypad_get_value@keypad	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> main@getValue(COMRAM[1]), 

    keypad_initalize@keypad	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _keypad_initalize->_gpio_pin_initalize
    _gpio_pin_initalize->_gpio_pin_write_logic
    _keypad_get_value->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9331
                                             16 COMRAM     1     1      0
                   _keypad_get_value
                   _keypad_initalize
 ---------------------------------------------------------------------------------
 (1) _keypad_initalize                                     2     1      1    5431
                                             10 COMRAM     2     1      1
       _gpio_pin_direction_initalize
                 _gpio_pin_initalize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initalize                                   2     1      1    4468
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_initalize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initalize                         7     6      1     657
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                     8     6      2    3872
                                              8 COMRAM     8     6      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    2785
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     482
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _keypad_initalize
     _gpio_pin_direction_initalize
     _gpio_pin_initalize
       _gpio_pin_direction_initalize
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      46       1       55.1%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      12        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 01 19:21:27 2023

                 keypad_initalize@keypad 0031                                       l93 134E  
                                     l79 1486                     relay_initialize@F566 003A  
                                    l212 140E                                      l205 127E  
                                    l224 14C4                                      l186 1152  
                                    u900 1374                                      u820 1126  
                                    u804 1088                                      u901 1370  
                                    u821 1120                                      u805 1084  
                                    u910 1394                                      u830 1128  
                                    u814 10DE                                      u911 1390  
                                    u815 10DA                                      u920 13B0  
                                    u840 1168                                      u921 13AC  
                                    u841 1164                                      u850 1188  
                                    u770 1026                                      u851 1184  
                                    u771 1022                                      u860 11A4  
                                    u780 1046                                      u940 1498  
                                    u861 11A0                                      u781 1042  
                                    u941 1494                                      u934 1400  
                                    u790 1062                                      u950 1420  
                                    u935 13FC                                      u791 105E  
                                    u951 141C                                      u960 1290  
                                    u961 128C                                      u890 1364  
                                    u874 11CA                                      u970 12A0  
                                    u891 1360                                      u875 11C6  
                                    u971 129C                                      u884 121A  
                                    u980 12D2                                      u885 1216  
                                    u981 12CE                                      u990 1308  
                                    u991 1304                                      wreg 0FE8  
                                   l1501 1252                                     l1511 1350  
                                   l1503 127C                                     l1521 13B8  
                                   l1513 1364                                     l1523 140C  
                                   l1515 1374                                     l1531 14A0  
                                   l1517 1394                                     l1461 1026  
                                   l1533 14C2                                     l1541 1428  
                                   l1519 13B0                                     l1551 12A0  
                                   l1463 1046                                     l1527 1488  
                                   l1543 1484                                     l1553 12A8  
                                   l1465 1062                                     l1529 1498  
                                   l1537 1410                                     l1491 11A4  
                                   l1571 12D2                                     l1547 1280  
                                   l1467 106A                                     l1475 1110  
                                   l1459 1012                                     l1539 1420  
                                   l1493 11AC                                     l1485 1154  
                                   l1581 12F8                                     l1573 12E2  
                                   l1565 12B0                                     l1549 1290  
                                   l1469 10C0                                     l1477 1150  
                                   l1495 11FC                                     l1487 1168  
                                   l1591 133C                                     l1583 1308  
                                   l1567 12C0                                     l1559 12AC  
                                   l1489 1188                                     l1585 1328  
                                   l1569 12C2                                     l1593 134C  
                                   l1587 132A                                     l1579 12E6  
                                   l1589 133A                                     l1863 1522  
                                   l1865 1526                                     l1867 152E  
                                   l1877 113A                                     l1879 1266  
                                   u1000 133A                                     u1001 1336  
                                   u1010 134C                                     u1011 1348  
         gpio_pin_read_logic@_pin_config 0027                                     _main 1522  
                                   fsr1h 0FE2                                     fsr2h 0FDA  
                                   indf1 0FE7                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
           keypad_get_value@rows_counter 0035                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                   _gpio_pin_write_logic 1154                   keypad_get_value@keypad 002F  
                           main@getValue 0037                                    ?_main 0027  
               __end_of_keypad_get_value 1350                                    tablat 0FF5  
                                  status 0FD8                 __end_of_keypad_initalize 1488  
                        __initialization 14C6                      keypad_get_value@ret 0032  
                dc_motor_initialize@F571 0046                  dc_motor_initialize@F573 0045  
                           __end_of_main 1542                    ?_gpio_pin_write_logic 0027  
               gpio_pin_read_logic@logic 0028                            _lat_registers 000B  
                                 ??_main 0037                            __activetblptr 0002  
                       led_turn_off@F582 003C                keypad_get_value@l_counter 0034  
                                 _keypad 001F                                   clear_0 14EC  
                                 isa$std 0001                             __pdataCOMRAM 0001  
                      led_initalize@F572 003E                        dc_motor_stop@F592 0040  
                      dc_motor_stop@F594 003F                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 14F2                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0029                           __pcstackCOMRAM 0027  
               keypad_get_value@getValue 0033                    gpio_pin_initalize@ret 0030  
                      ?_keypad_get_value 002F                       ??_keypad_get_value 0031  
                             _btn_values 1001                           _tris_registers 0015  
gpio_pin_direction_initalize@_pin_config 0027                        ?_keypad_initalize 0031  
                                __Hparam 0000                                  __Lparam 0000  
                     ??_keypad_initalize 0032                      _gpio_pin_read_logic 1350  
             __end_of_gpio_pin_initalize 14C6                             __psmallconst 1000  
                                __pcinit 14C6                                  __ramtop 1000  
                                __ptext0 1522                                  __ptext1 1410  
                                __ptext2 1488                                  __ptext3 1012  
                                __ptext4 1280                                  __ptext5 1154  
                                __ptext6 1350                     ?_gpio_pin_read_logic 0027  
                   end_of_initialization 14F2                            __Lmediumconst 0000  
           keypad_get_value@cols_counter 0036                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc1 0FE6                                  postinc2 0FDE  
   __end_of_gpio_pin_direction_initalize 1154             _gpio_pin_direction_initalize 1012  
                    keypad_initalize@ret 0032                    ??_gpio_pin_read_logic 0029  
                  keypad_get_value@value 0030                       relay_turn_off@F576 0038  
                          __pidataCOMRAM 14FC                      start_initialization 14C6  
          ?_gpio_pin_direction_initalize 0027                          led_turn_on@F577 003D  
                            __pbssCOMRAM 0038       gpio_pin_direction_initalize@status 002D  
          gpio_pin_initalize@_pin_config 002F          gpio_pin_write_logic@_pin_config 0027  
                         led_toggle@F587 003B                  dc_motor_move_right@F580 0043  
                dc_motor_move_right@F578 0044                gpio_pin_write_logic@logic 0028  
                            __smallconst 1000                       _gpio_pin_initalize 1488  
         ??_gpio_pin_direction_initalize 0028                      ?_gpio_pin_initalize 002F  
                   ??_gpio_pin_initalize 0030                        relay_turn_on@F571 0039  
                              copy_data0 14DA                   dc_motor_move_left@F585 0042  
                 dc_motor_move_left@F587 0041                                 __Hrparam 0000  
                               __Lrparam 0000                       __end_of_btn_values 1011  
            __end_of_gpio_pin_read_logic 1410                         _keypad_get_value 1280  
                               isa$xinst 0000                         _keypad_initalize 1410  
              gpio_pin_read_logic@status 002D             __end_of_gpio_pin_write_logic 1280  
                         _port_registers 0001               gpio_pin_write_logic@status 002E  
