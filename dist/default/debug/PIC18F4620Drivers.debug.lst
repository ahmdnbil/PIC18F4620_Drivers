

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 01 20:42:46 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   001528                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_registers
    62   001528  80                 	db	128
    63   001529  0F                 	db	15
    64   00152A  81                 	db	129
    65   00152B  0F                 	db	15
    66   00152C  82                 	db	130
    67   00152D  0F                 	db	15
    68   00152E  83                 	db	131
    69   00152F  0F                 	db	15
    70   001530  84                 	db	132
    71   001531  0F                 	db	15
    72                           
    73                           ;initializer for _lat_registers
    74   001532  89                 	db	137
    75   001533  0F                 	db	15
    76   001534  8A                 	db	138
    77   001535  0F                 	db	15
    78   001536  8B                 	db	139
    79   001537  0F                 	db	15
    80   001538  8C                 	db	140
    81   001539  0F                 	db	15
    82   00153A  8D                 	db	141
    83   00153B  0F                 	db	15
    84                           
    85                           ;initializer for _tris_registers
    86   00153C  92                 	db	146
    87   00153D  0F                 	db	15
    88   00153E  93                 	db	147
    89   00153F  0F                 	db	15
    90   001540  94                 	db	148
    91   001541  0F                 	db	15
    92   001542  95                 	db	149
    93   001543  0F                 	db	15
    94   001544  96                 	db	150
    95   001545  0F                 	db	15
    96                           
    97                           ;initializer for _keypad
    98   001546  02                 	db	2
    99   001547  0A                 	db	10
   100   001548  12                 	db	18
   101   001549  1A                 	db	26
   102   00154A  62                 	db	98
   103   00154B  6A                 	db	106
   104   00154C  72                 	db	114
   105   00154D  7A                 	db	122
   106                           
   107                           ;initializer for _pin1
   108   00154E  03                 	db	3
   109                           
   110                           	psect	smallconst
   111   001000                     __psmallconst:
   112                           	callstack 0
   113   001000  00                 	db	0
   114   001001                     _btn_values:
   115                           	callstack 0
   116   001001  37                 	db	55
   117   001002  38                 	db	56
   118   001003  39                 	db	57
   119   001004  2F                 	db	47
   120   001005  34                 	db	52
   121   001006  35                 	db	53
   122   001007  36                 	db	54
   123   001008  2A                 	db	42
   124   001009  31                 	db	49
   125   00100A  32                 	db	50
   126   00100B  33                 	db	51
   127   00100C  2D                 	db	45
   128   00100D  23                 	db	35
   129   00100E  30                 	db	48
   130   00100F  3D                 	db	61
   131   001010  2B                 	db	43
   132   001011                     __end_of_btn_values:
   133                           	callstack 0
   134   001011  00                 	db	0	; dummy byte at the end
   135   000000                     
   136                           ; #config settings
   137                           
   138                           	psect	cinit
   139   0014C2                     __pcinit:
   140                           	callstack 0
   141   0014C2                     start_initialization:
   142                           	callstack 0
   143   0014C2                     __initialization:
   144                           	callstack 0
   145                           
   146                           ; Initialize objects allocated to COMRAM (39 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148   0014C2  0E28               	movlw	low __pidataCOMRAM
   149   0014C4  6EF6               	movwf	tblptrl,c
   150   0014C6  0E15               	movlw	high __pidataCOMRAM
   151   0014C8  6EF7               	movwf	tblptrh,c
   152   0014CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153   0014CC  6EF8               	movwf	tblptru,c
   154   0014CE  EE00  F001         	lfsr	0,__pdataCOMRAM
   155   0014D2  EE10 F027          	lfsr	1,39
   156   0014D6                     copy_data0:
   157   0014D6  0009               	tblrd		*+
   158   0014D8  CFF5 FFEE          	movff	tablat,postinc0
   159   0014DC  50E5               	movf	postdec1,w,c
   160   0014DE  50E1               	movf	fsr1l,w,c
   161   0014E0  E1FA               	bnz	copy_data0
   162                           
   163                           ; Clear objects allocated to COMRAM (16 bytes)
   164   0014E2  EE00  F028         	lfsr	0,__pbssCOMRAM
   165   0014E6  0E10               	movlw	16
   166   0014E8                     clear_0:
   167   0014E8  6AEE               	clrf	postinc0,c
   168   0014EA  06E8               	decf	wreg,f,c
   169   0014EC  E1FD               	bnz	clear_0
   170   0014EE                     end_of_initialization:
   171                           	callstack 0
   172   0014EE                     __end_of__initialization:
   173                           	callstack 0
   174   0014EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175   0014F0  6EF8               	movwf	tblptru,c
   176   0014F2  0100               	movlb	0
   177   0014F4  EF7C  F00A         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180   000028                     __pbssCOMRAM:
   181                           	callstack 0
   182   000028                     relay_turn_off@F576:
   183                           	callstack 0
   184   000028                     	ds	1
   185   000029                     relay_turn_on@F571:
   186                           	callstack 0
   187   000029                     	ds	1
   188   00002A                     relay_initialize@F566:
   189                           	callstack 0
   190   00002A                     	ds	1
   191   00002B                     led_toggle@F587:
   192                           	callstack 0
   193   00002B                     	ds	1
   194   00002C                     led_turn_off@F582:
   195                           	callstack 0
   196   00002C                     	ds	1
   197   00002D                     led_turn_on@F577:
   198                           	callstack 0
   199   00002D                     	ds	1
   200   00002E                     led_initalize@F572:
   201                           	callstack 0
   202   00002E                     	ds	1
   203   00002F                     dc_motor_stop@F594:
   204                           	callstack 0
   205   00002F                     	ds	1
   206   000030                     dc_motor_stop@F592:
   207                           	callstack 0
   208   000030                     	ds	1
   209   000031                     dc_motor_move_left@F587:
   210                           	callstack 0
   211   000031                     	ds	1
   212   000032                     dc_motor_move_left@F585:
   213                           	callstack 0
   214   000032                     	ds	1
   215   000033                     dc_motor_move_right@F580:
   216                           	callstack 0
   217   000033                     	ds	1
   218   000034                     dc_motor_move_right@F578:
   219                           	callstack 0
   220   000034                     	ds	1
   221   000035                     dc_motor_initialize@F573:
   222                           	callstack 0
   223   000035                     	ds	1
   224   000036                     dc_motor_initialize@F571:
   225                           	callstack 0
   226   000036                     	ds	1
   227   000037                     _getValue:
   228                           	callstack 0
   229   000037                     	ds	1
   230                           
   231                           	psect	dataCOMRAM
   232   000001                     __pdataCOMRAM:
   233                           	callstack 0
   234   000001                     _port_registers:
   235                           	callstack 0
   236   000001                     	ds	10
   237   00000B                     _lat_registers:
   238                           	callstack 0
   239   00000B                     	ds	10
   240   000015                     _tris_registers:
   241                           	callstack 0
   242   000015                     	ds	10
   243   00001F                     _keypad:
   244                           	callstack 0
   245   00001F                     	ds	8
   246   000027                     _pin1:
   247                           	callstack 0
   248   000027                     	ds	1
   249                           
   250                           	psect	cstackCOMRAM
   251   000038                     __pcstackCOMRAM:
   252                           	callstack 0
   253   000038                     gpio_pin_direction_initalize@_pin_config:
   254                           	callstack 0
   255   000038                     gpio_pin_write_logic@_pin_config:
   256                           	callstack 0
   257   000038                     gpio_pin_read_logic@_pin_config:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x0
   261   000038                     	ds	1
   262   000039                     ??_gpio_pin_direction_initalize:
   263   000039                     gpio_pin_write_logic@logic:
   264                           	callstack 0
   265   000039                     gpio_pin_read_logic@logic:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x1
   269   000039                     	ds	1
   270   00003A                     ??_gpio_pin_read_logic:
   271   00003A                     ??_gpio_pin_write_logic:
   272                           
   273                           ; 1 bytes @ 0x2
   274   00003A                     	ds	4
   275   00003E                     gpio_pin_direction_initalize@status:
   276                           	callstack 0
   277   00003E                     gpio_pin_read_logic@status:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x6
   281   00003E                     	ds	1
   282   00003F                     gpio_pin_write_logic@status:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x7
   286   00003F                     	ds	1
   287   000040                     keypad_get_value@keypad:
   288                           	callstack 0
   289   000040                     gpio_pin_initalize@_pin_config:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x8
   293   000040                     	ds	1
   294   000041                     keypad_get_value@value:
   295                           	callstack 0
   296   000041                     gpio_pin_initalize@ret:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x9
   300   000041                     	ds	1
   301   000042                     ??_keypad_get_value:
   302   000042                     keypad_initalize@keypad:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xA
   306   000042                     	ds	1
   307   000043                     keypad_initalize@ret:
   308                           	callstack 0
   309   000043                     keypad_get_value@ret:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xB
   313   000043                     	ds	1
   314   000044                     keypad_get_value@getValue:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xC
   318   000044                     	ds	1
   319   000045                     keypad_get_value@l_counter:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xD
   323   000045                     	ds	1
   324   000046                     keypad_get_value@rows_counter:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xE
   328   000046                     	ds	1
   329   000047                     keypad_get_value@cols_counter:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xF
   333   000047                     	ds	1
   334   000048                     
   335                           ; 1 bytes @ 0x10
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 28 in file "application.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  ret             1    0        unsigned char 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  2  271[None  ] int 
   348 ;; Registers used:
   349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called: 3
   361 ;; This function calls:
   362 ;;		_gpio_pin_direction_initalize
   363 ;;		_gpio_pin_write_logic
   364 ;;		_keypad_get_value
   365 ;;		_keypad_initalize
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372   0014F8                     __ptext0:
   373                           	callstack 0
   374   0014F8                     _main:
   375                           	callstack 28
   376   0014F8  0E1F               	movlw	low _keypad
   377   0014FA  6E42               	movwf	keypad_initalize@keypad^0,c
   378   0014FC  EC06  F00A         	call	_keypad_initalize	;wreg free
   379   001500  0E27               	movlw	low _pin1
   380   001502  6E38               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   381   001504  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   382   001508  0E27               	movlw	low _pin1
   383   00150A  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
   384   00150C  0E01               	movlw	1
   385   00150E  6E39               	movwf	gpio_pin_write_logic@logic^0,c
   386   001510  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   387   001514                     l1883:
   388   001514  0E1F               	movlw	low _keypad
   389   001516  6E40               	movwf	keypad_get_value@keypad^0,c
   390   001518  0E37               	movlw	low _getValue
   391   00151A  6E41               	movwf	keypad_get_value@value^0,c
   392   00151C  EC40  F009         	call	_keypad_get_value	;wreg free
   393   001520  EF8A  F00A         	goto	l1883
   394   001524  EF00  F000         	goto	start
   395   001528                     __end_of_main:
   396                           	callstack 0
   397                           
   398 ;; *************** function _keypad_initalize *****************
   399 ;; Defined at:
   400 ;;		line 21 in file "ECU_layer/KEYPAD/ecu_keypad.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  keypad          1   10[COMRAM] PTR const struct .
   403 ;;		 -> keypad(8), 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  ret             1   11[COMRAM] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      unsigned char 
   408 ;; Registers used:
   409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 2
   422 ;; This function calls:
   423 ;;		_gpio_pin_direction_initalize
   424 ;;		_gpio_pin_initalize
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431   00140C                     __ptext1:
   432                           	callstack 0
   433   00140C                     _keypad_initalize:
   434                           	callstack 28
   435   00140C                     
   436                           ;ECU_layer/KEYPAD/ecu_keypad.c: 24:     if(((void*)0) == keypad)
   437   00140C  5042               	movf	keypad_initalize@keypad^0,w,c
   438   00140E  A4D8               	btfss	status,2,c
   439   001410  EF0C  F00A         	goto	u951
   440   001414  EF0E  F00A         	goto	u950
   441   001418                     u951:
   442   001418  EF12  F00A         	goto	l1553
   443   00141C                     u950:
   444   00141C                     
   445                           ;ECU_layer/KEYPAD/ecu_keypad.c: 25:     {;ECU_layer/KEYPAD/ecu_keypad.c: 26:         ret
      +                          =(Std_ReturnType)0x00;
   446   00141C  0E00               	movlw	0
   447   00141E  6E43               	movwf	keypad_initalize@ret^0,c
   448                           
   449                           ;ECU_layer/KEYPAD/ecu_keypad.c: 27:     }
   450   001420  EF40  F00A         	goto	l1555
   451   001424                     l1553:
   452                           
   453                           ;ECU_layer/KEYPAD/ecu_keypad.c: 29:     {;ECU_layer/KEYPAD/ecu_keypad.c: 30:         ret
      +                          =gpio_pin_initalize(&(keypad->keypad_row_pins[0]));
   454   001424  C042  F040         	movff	keypad_initalize@keypad,gpio_pin_initalize@_pin_config
   455   001428  EC42  F00A         	call	_gpio_pin_initalize	;wreg free
   456   00142C  6E43               	movwf	keypad_initalize@ret^0,c
   457                           
   458                           ;ECU_layer/KEYPAD/ecu_keypad.c: 31:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[1]));
   459   00142E  2842               	incf	keypad_initalize@keypad^0,w,c
   460   001430  6E40               	movwf	gpio_pin_initalize@_pin_config^0,c
   461   001432  EC42  F00A         	call	_gpio_pin_initalize	;wreg free
   462   001436  6E43               	movwf	keypad_initalize@ret^0,c
   463                           
   464                           ;ECU_layer/KEYPAD/ecu_keypad.c: 32:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[2]));
   465   001438  5042               	movf	keypad_initalize@keypad^0,w,c
   466   00143A  0F02               	addlw	2
   467   00143C  6E40               	movwf	gpio_pin_initalize@_pin_config^0,c
   468   00143E  EC42  F00A         	call	_gpio_pin_initalize	;wreg free
   469   001442  6E43               	movwf	keypad_initalize@ret^0,c
   470                           
   471                           ;ECU_layer/KEYPAD/ecu_keypad.c: 33:         ret=gpio_pin_initalize(&(keypad->keypad_row_
      +                          pins[3]));
   472   001444  5042               	movf	keypad_initalize@keypad^0,w,c
   473   001446  0F03               	addlw	3
   474   001448  6E40               	movwf	gpio_pin_initalize@_pin_config^0,c
   475   00144A  EC42  F00A         	call	_gpio_pin_initalize	;wreg free
   476   00144E  6E43               	movwf	keypad_initalize@ret^0,c
   477                           
   478                           ;ECU_layer/KEYPAD/ecu_keypad.c: 35:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[0]));
   479   001450  5042               	movf	keypad_initalize@keypad^0,w,c
   480   001452  0F04               	addlw	4
   481   001454  6E38               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   482   001456  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   483   00145A  6E43               	movwf	keypad_initalize@ret^0,c
   484                           
   485                           ;ECU_layer/KEYPAD/ecu_keypad.c: 36:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[1]));
   486   00145C  5042               	movf	keypad_initalize@keypad^0,w,c
   487   00145E  0F05               	addlw	5
   488   001460  6E38               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   489   001462  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   490   001466  6E43               	movwf	keypad_initalize@ret^0,c
   491                           
   492                           ;ECU_layer/KEYPAD/ecu_keypad.c: 37:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[2]));
   493   001468  5042               	movf	keypad_initalize@keypad^0,w,c
   494   00146A  0F06               	addlw	6
   495   00146C  6E38               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   496   00146E  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   497   001472  6E43               	movwf	keypad_initalize@ret^0,c
   498                           
   499                           ;ECU_layer/KEYPAD/ecu_keypad.c: 38:         ret = gpio_pin_direction_initalize(&(keypad-
      +                          >keypad_col_pins[3]));
   500   001474  5042               	movf	keypad_initalize@keypad^0,w,c
   501   001476  0F07               	addlw	7
   502   001478  6E38               	movwf	gpio_pin_direction_initalize@_pin_config^0,c
   503   00147A  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   504   00147E  6E43               	movwf	keypad_initalize@ret^0,c
   505   001480                     l1555:
   506                           
   507                           ;ECU_layer/KEYPAD/ecu_keypad.c: 40:     return ret;
   508   001480  5043               	movf	keypad_initalize@ret^0,w,c
   509   001482  0012               	return		;funcret
   510   001484                     __end_of_keypad_initalize:
   511                           	callstack 0
   512                           
   513 ;; *************** function _gpio_pin_initalize *****************
   514 ;; Defined at:
   515 ;;		line 159 in file "MCAL_layer/GPIO/hal_gpio.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   518 ;;		 -> relay_initialize@pin(1), led_initalize@pin_init(1), keypad$keypad_row_pins(4), keypad(8), 
   519 ;;		 -> dc_motor_initialize@pin2(1), dc_motor_initialize@pin1(1), 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  ret             1    9[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      unsigned char 
   524 ;; Registers used:
   525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        2 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 1
   538 ;; This function calls:
   539 ;;		_gpio_pin_direction_initalize
   540 ;;		_gpio_pin_write_logic
   541 ;; This function is called by:
   542 ;;		_keypad_initalize
   543 ;;		_dc_motor_initialize
   544 ;;		_led_initalize
   545 ;;		_relay_initialize
   546 ;;		_ssd_initalize
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text2
   551   001484                     __ptext2:
   552                           	callstack 0
   553   001484                     _gpio_pin_initalize:
   554                           	callstack 28
   555   001484                     
   556                           ;MCAL_layer/GPIO/hal_gpio.c: 162:     if(((void*)0) == _pin_config)
   557   001484  5040               	movf	gpio_pin_initalize@_pin_config^0,w,c
   558   001486  A4D8               	btfss	status,2,c
   559   001488  EF48  F00A         	goto	u941
   560   00148C  EF4A  F00A         	goto	u940
   561   001490                     u941:
   562   001490  EF4E  F00A         	goto	l1543
   563   001494                     u940:
   564   001494                     
   565                           ;MCAL_layer/GPIO/hal_gpio.c: 163:     {;MCAL_layer/GPIO/hal_gpio.c: 164:         ret=(St
      +                          d_ReturnType)0x00;
   566   001494  0E00               	movlw	0
   567   001496  6E41               	movwf	gpio_pin_initalize@ret^0,c
   568                           
   569                           ;MCAL_layer/GPIO/hal_gpio.c: 165:     }
   570   001498  EF5F  F00A         	goto	l1545
   571   00149C                     l1543:
   572                           
   573                           ;MCAL_layer/GPIO/hal_gpio.c: 167:     {;MCAL_layer/GPIO/hal_gpio.c: 168:         ret=gpi
      +                          o_pin_direction_initalize(_pin_config);
   574   00149C  C040  F038         	movff	gpio_pin_initalize@_pin_config,gpio_pin_direction_initalize@_pin_config
   575   0014A0  EC09  F008         	call	_gpio_pin_direction_initalize	;wreg free
   576   0014A4  6E41               	movwf	gpio_pin_initalize@ret^0,c
   577                           
   578                           ;MCAL_layer/GPIO/hal_gpio.c: 169:         ret=gpio_pin_write_logic(_pin_config,_pin_conf
      +                          ig->logic);
   579   0014A6  C040  F038         	movff	gpio_pin_initalize@_pin_config,gpio_pin_write_logic@_pin_config
   580   0014AA  5040               	movf	gpio_pin_initalize@_pin_config^0,w,c
   581   0014AC  6ED9               	movwf	fsr2l,c
   582   0014AE  6ADA               	clrf	fsr2h,c
   583   0014B0  0E00               	movlw	0
   584   0014B2  BEDF               	btfsc	indf2,7,c
   585   0014B4  0E01               	movlw	1
   586   0014B6  6E39               	movwf	gpio_pin_write_logic@logic^0,c
   587   0014B8  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   588   0014BC  6E41               	movwf	gpio_pin_initalize@ret^0,c
   589   0014BE                     l1545:
   590                           
   591                           ;MCAL_layer/GPIO/hal_gpio.c: 171:     return ret;
   592   0014BE  5041               	movf	gpio_pin_initalize@ret^0,w,c
   593   0014C0  0012               	return		;funcret
   594   0014C2                     __end_of_gpio_pin_initalize:
   595                           	callstack 0
   596                           
   597 ;; *************** function _gpio_pin_direction_initalize *****************
   598 ;; Defined at:
   599 ;;		line 28 in file "MCAL_layer/GPIO/hal_gpio.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   602 ;;		 -> pin1(1), relay_initialize@pin(1), led_initalize@pin_init(1), keypad$keypad_col_pins(4), 
   603 ;;		 -> keypad$keypad_row_pins(4), keypad(8), dc_motor_initialize@pin2(1), dc_motor_initialize@pin1(1), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  status          1    6[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      unsigned char 
   608 ;; Registers used:
   609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        7 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_keypad_initalize
   625 ;;		_gpio_pin_initalize
   626 ;;		_main
   627 ;;		_button_initialize
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text3
   632   001012                     __ptext3:
   633                           	callstack 0
   634   001012                     _gpio_pin_direction_initalize:
   635                           	callstack 28
   636   001012                     
   637                           ;MCAL_layer/GPIO/hal_gpio.c: 28: Std_ReturnType gpio_pin_direction_initalize(const pin_c
      +                          onfig_t* _pin_config);MCAL_layer/GPIO/hal_gpio.c: 29: {;MCAL_layer/GPIO/hal_gpio.c: 30: 
      +                              Std_ReturnType status=(Std_ReturnType)0x01;
   638   001012  0E01               	movlw	1
   639   001014  6E3E               	movwf	gpio_pin_direction_initalize@status^0,c
   640                           
   641                           ;MCAL_layer/GPIO/hal_gpio.c: 32:     if(((void*)0)==_pin_config || _pin_config->pin > 8 
      +                          -1 || _pin_config->port > 5 -1)
   642   001016  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   643   001018  B4D8               	btfsc	status,2,c
   644   00101A  EF11  F008         	goto	u771
   645   00101E  EF13  F008         	goto	u770
   646   001022                     u771:
   647   001022  EF31  F008         	goto	l1477
   648   001026                     u770:
   649   001026  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   650   001028  6ED9               	movwf	fsr2l,c
   651   00102A  6ADA               	clrf	fsr2h,c
   652   00102C  30DF               	rrcf	223,w,c
   653   00102E  32E8               	rrcf	wreg,f,c
   654   001030  32E8               	rrcf	wreg,f,c
   655   001032  0B07               	andlw	7
   656   001034  6E39               	movwf	??_gpio_pin_direction_initalize^0,c
   657   001036  0E08               	movlw	8
   658   001038  6039               	cpfslt	??_gpio_pin_direction_initalize^0,c
   659   00103A  EF21  F008         	goto	u781
   660   00103E  EF23  F008         	goto	u780
   661   001042                     u781:
   662   001042  EF31  F008         	goto	l1477
   663   001046                     u780:
   664   001046  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   665   001048  6ED9               	movwf	fsr2l,c
   666   00104A  6ADA               	clrf	fsr2h,c
   667   00104C  50DF               	movf	223,w,c
   668   00104E  0B07               	andlw	7
   669   001050  6E39               	movwf	??_gpio_pin_direction_initalize^0,c
   670   001052  0E04               	movlw	4
   671   001054  6439               	cpfsgt	??_gpio_pin_direction_initalize^0,c
   672   001056  EF2F  F008         	goto	u791
   673   00105A  EF31  F008         	goto	u790
   674   00105E                     u791:
   675   00105E  EF88  F008         	goto	l1487
   676   001062                     u790:
   677   001062                     l1477:
   678                           
   679                           ;MCAL_layer/GPIO/hal_gpio.c: 33:     {;MCAL_layer/GPIO/hal_gpio.c: 34:         status =(
      +                          Std_ReturnType)0x00;
   680   001062  0E00               	movlw	0
   681   001064  6E3E               	movwf	gpio_pin_direction_initalize@status^0,c
   682                           
   683                           ;MCAL_layer/GPIO/hal_gpio.c: 35:     }
   684   001066  EFA8  F008         	goto	l1489
   685   00106A                     l1479:
   686   00106A  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   687   00106C  6ED9               	movwf	fsr2l,c
   688   00106E  6ADA               	clrf	fsr2h,c
   689   001070  30DF               	rrcf	223,w,c
   690   001072  32E8               	rrcf	wreg,f,c
   691   001074  32E8               	rrcf	wreg,f,c
   692   001076  0B07               	andlw	7
   693   001078  6E39               	movwf	??_gpio_pin_direction_initalize^0,c
   694   00107A  0E01               	movlw	1
   695   00107C  6E3A               	movwf	(??_gpio_pin_direction_initalize+1)^0,c
   696   00107E  2A39               	incf	??_gpio_pin_direction_initalize^0,f,c
   697   001080  EF44  F008         	goto	u804
   698   001084                     u805:
   699   001084  90D8               	bcf	status,0,c
   700   001086  363A               	rlcf	(??_gpio_pin_direction_initalize+1)^0,f,c
   701   001088                     u804:
   702   001088  2E39               	decfsz	??_gpio_pin_direction_initalize^0,f,c
   703   00108A  EF42  F008         	goto	u805
   704   00108E  503A               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   705   001090  0AFF               	xorlw	255
   706   001092  6E3B               	movwf	(??_gpio_pin_direction_initalize+2)^0,c
   707   001094  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   708   001096  6ED9               	movwf	fsr2l,c
   709   001098  6ADA               	clrf	fsr2h,c
   710   00109A  50DF               	movf	223,w,c
   711   00109C  0B07               	andlw	7
   712   00109E  0D02               	mullw	2
   713   0010A0  50F3               	movf	243,w,c
   714   0010A2  0F15               	addlw	low _tris_registers
   715   0010A4  6ED9               	movwf	fsr2l,c
   716   0010A6  6ADA               	clrf	fsr2h,c
   717   0010A8  CFDE F03C          	movff	postinc2,??_gpio_pin_direction_initalize+3
   718   0010AC  CFDD F03D          	movff	postdec2,??_gpio_pin_direction_initalize+4
   719   0010B0  C03C  FFD9         	movff	??_gpio_pin_direction_initalize+3,fsr2l
   720   0010B4  C03D  FFDA         	movff	??_gpio_pin_direction_initalize+4,fsr2h
   721   0010B8  503B               	movf	(??_gpio_pin_direction_initalize+2)^0,w,c
   722   0010BA  16DF               	andwf	indf2,f,c
   723                           
   724                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             break;
   725   0010BC  EFA8  F008         	goto	l1489
   726   0010C0                     l1481:
   727   0010C0  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   728   0010C2  6ED9               	movwf	fsr2l,c
   729   0010C4  6ADA               	clrf	fsr2h,c
   730   0010C6  30DF               	rrcf	223,w,c
   731   0010C8  32E8               	rrcf	wreg,f,c
   732   0010CA  32E8               	rrcf	wreg,f,c
   733   0010CC  0B07               	andlw	7
   734   0010CE  6E39               	movwf	??_gpio_pin_direction_initalize^0,c
   735   0010D0  0E01               	movlw	1
   736   0010D2  6E3A               	movwf	(??_gpio_pin_direction_initalize+1)^0,c
   737   0010D4  2A39               	incf	??_gpio_pin_direction_initalize^0,f,c
   738   0010D6  EF6F  F008         	goto	u814
   739   0010DA                     u815:
   740   0010DA  90D8               	bcf	status,0,c
   741   0010DC  363A               	rlcf	(??_gpio_pin_direction_initalize+1)^0,f,c
   742   0010DE                     u814:
   743   0010DE  2E39               	decfsz	??_gpio_pin_direction_initalize^0,f,c
   744   0010E0  EF6D  F008         	goto	u815
   745   0010E4  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   746   0010E6  6ED9               	movwf	fsr2l,c
   747   0010E8  6ADA               	clrf	fsr2h,c
   748   0010EA  50DF               	movf	223,w,c
   749   0010EC  0B07               	andlw	7
   750   0010EE  0D02               	mullw	2
   751   0010F0  50F3               	movf	243,w,c
   752   0010F2  0F15               	addlw	low _tris_registers
   753   0010F4  6ED9               	movwf	fsr2l,c
   754   0010F6  6ADA               	clrf	fsr2h,c
   755   0010F8  CFDE F03B          	movff	postinc2,??_gpio_pin_direction_initalize+2
   756   0010FC  CFDD F03C          	movff	postdec2,??_gpio_pin_direction_initalize+3
   757   001100  C03B  FFD9         	movff	??_gpio_pin_direction_initalize+2,fsr2l
   758   001104  C03C  FFDA         	movff	??_gpio_pin_direction_initalize+3,fsr2h
   759   001108  503A               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   760   00110A  12DF               	iorwf	indf2,f,c
   761                           
   762                           ;MCAL_layer/GPIO/hal_gpio.c: 42:             break;
   763   00110C  EFA8  F008         	goto	l1489
   764   001110                     l1487:
   765   001110  5038               	movf	gpio_pin_direction_initalize@_pin_config^0,w,c
   766   001112  6ED9               	movwf	fsr2l,c
   767   001114  6ADA               	clrf	fsr2h,c
   768   001116  BCDF               	btfsc	indf2,6,c
   769   001118  EF90  F008         	goto	u821
   770   00111C  EF93  F008         	goto	u820
   771   001120                     u821:
   772   001120  0E01               	movlw	1
   773   001122  EF94  F008         	goto	u830
   774   001126                     u820:
   775   001126  0E00               	movlw	0
   776   001128                     u830:
   777   001128  6E39               	movwf	??_gpio_pin_direction_initalize^0,c
   778   00112A  6A3A               	clrf	(??_gpio_pin_direction_initalize+1)^0,c
   779                           
   780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   781                           ; Switch size 1, requested type "simple"
   782                           ; Number of cases is 1, Range of values is 0 to 0
   783                           ; switch strategies available:
   784                           ; Name         Instructions Cycles
   785                           ; simple_byte            4     3 (average)
   786                           ;	Chosen strategy is simple_byte
   787   00112C  503A               	movf	(??_gpio_pin_direction_initalize+1)^0,w,c
   788   00112E  0A00               	xorlw	0	; case 0
   789   001130  B4D8               	btfsc	status,2,c
   790   001132  EF9D  F008         	goto	l1893
   791   001136  EF31  F008         	goto	l1477
   792   00113A                     l1893:
   793                           
   794                           ; Switch size 1, requested type "simple"
   795                           ; Number of cases is 2, Range of values is 0 to 1
   796                           ; switch strategies available:
   797                           ; Name         Instructions Cycles
   798                           ; simple_byte            7     4 (average)
   799                           ;	Chosen strategy is simple_byte
   800   00113A  5039               	movf	??_gpio_pin_direction_initalize^0,w,c
   801   00113C  0A00               	xorlw	0	; case 0
   802   00113E  B4D8               	btfsc	status,2,c
   803   001140  EF35  F008         	goto	l1479
   804   001144  0A01               	xorlw	1	; case 1
   805   001146  B4D8               	btfsc	status,2,c
   806   001148  EF60  F008         	goto	l1481
   807   00114C  EF31  F008         	goto	l1477
   808   001150                     l1489:
   809                           
   810                           ;MCAL_layer/GPIO/hal_gpio.c: 47:     return status;
   811   001150  503E               	movf	gpio_pin_direction_initalize@status^0,w,c
   812   001152  0012               	return		;funcret
   813   001154                     __end_of_gpio_pin_direction_initalize:
   814                           	callstack 0
   815                           
   816 ;; *************** function _keypad_get_value *****************
   817 ;; Defined at:
   818 ;;		line 43 in file "ECU_layer/KEYPAD/ecu_keypad.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  keypad          1    8[COMRAM] PTR const struct .
   821 ;;		 -> keypad(8), 
   822 ;;  value           1    9[COMRAM] PTR unsigned char 
   823 ;;		 -> getValue(1), 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  cols_counter    1   15[COMRAM] unsigned char 
   826 ;;  rows_counter    1   14[COMRAM] unsigned char 
   827 ;;  l_counter       1   13[COMRAM] unsigned char 
   828 ;;  getValue        1   12[COMRAM] unsigned char 
   829 ;;  ret             1   11[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      unsigned char 
   832 ;; Registers used:
   833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        8 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 1
   846 ;; This function calls:
   847 ;;		_gpio_pin_read_logic
   848 ;;		_gpio_pin_write_logic
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text4
   855   001280                     __ptext4:
   856                           	callstack 0
   857   001280                     _keypad_get_value:
   858                           	callstack 29
   859   001280                     
   860                           ;ECU_layer/KEYPAD/ecu_keypad.c: 46:     uint8 rows_counter,cols_counter,l_counter,getVal
      +                          ue;;ECU_layer/KEYPAD/ecu_keypad.c: 47:     if (((void*)0) == keypad || ((void*)0) == val
      +                          ue)
   861   001280  5040               	movf	keypad_get_value@keypad^0,w,c
   862   001282  B4D8               	btfsc	status,2,c
   863   001284  EF46  F009         	goto	u961
   864   001288  EF48  F009         	goto	u960
   865   00128C                     u961:
   866   00128C  EF50  F009         	goto	l1563
   867   001290                     u960:
   868   001290  5041               	movf	keypad_get_value@value^0,w,c
   869   001292  A4D8               	btfss	status,2,c
   870   001294  EF4E  F009         	goto	u971
   871   001298  EF50  F009         	goto	u970
   872   00129C                     u971:
   873   00129C  EF54  F009         	goto	l1565
   874   0012A0                     u970:
   875   0012A0                     l1563:
   876                           
   877                           ;ECU_layer/KEYPAD/ecu_keypad.c: 48:     {;ECU_layer/KEYPAD/ecu_keypad.c: 49:         ret
      +                           = (Std_ReturnType)0x00;
   878   0012A0  0E00               	movlw	0
   879   0012A2  6E43               	movwf	keypad_get_value@ret^0,c
   880                           
   881                           ;ECU_layer/KEYPAD/ecu_keypad.c: 50:     }
   882   0012A4  EFA4  F009         	goto	l1605
   883   0012A8                     l1565:
   884                           
   885                           ;ECU_layer/KEYPAD/ecu_keypad.c: 52:     {;ECU_layer/KEYPAD/ecu_keypad.c: 53:         for
      +                          (rows_counter=0;rows_counter<4;rows_counter++)
   886   0012A8  0E00               	movlw	0
   887   0012AA  6E46               	movwf	keypad_get_value@rows_counter^0,c
   888   0012AC                     l1571:
   889                           
   890                           ;ECU_layer/KEYPAD/ecu_keypad.c: 54:         {;ECU_layer/KEYPAD/ecu_keypad.c: 56:        
      +                               for(l_counter=0;l_counter<4;l_counter++)
   891   0012AC  0E00               	movlw	0
   892   0012AE  6E45               	movwf	keypad_get_value@l_counter^0,c
   893   0012B0                     l1577:
   894   0012B0  5040               	movf	keypad_get_value@keypad^0,w,c
   895   0012B2  2445               	addwf	keypad_get_value@l_counter^0,w,c
   896   0012B4  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
   897   0012B6  0E00               	movlw	0
   898   0012B8  6E39               	movwf	gpio_pin_write_logic@logic^0,c
   899   0012BA  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   900   0012BE                     
   901                           ;ECU_layer/KEYPAD/ecu_keypad.c: 59:             }
   902   0012BE  2A45               	incf	keypad_get_value@l_counter^0,f,c
   903   0012C0  0E03               	movlw	3
   904   0012C2  6445               	cpfsgt	keypad_get_value@l_counter^0,c
   905   0012C4  EF66  F009         	goto	u981
   906   0012C8  EF68  F009         	goto	u980
   907   0012CC                     u981:
   908   0012CC  EF58  F009         	goto	l1577
   909   0012D0                     u980:
   910   0012D0  5040               	movf	keypad_get_value@keypad^0,w,c
   911   0012D2  2446               	addwf	keypad_get_value@rows_counter^0,w,c
   912   0012D4  6E38               	movwf	gpio_pin_write_logic@_pin_config^0,c
   913   0012D6  0E01               	movlw	1
   914   0012D8  6E39               	movwf	gpio_pin_write_logic@logic^0,c
   915   0012DA  ECAA  F008         	call	_gpio_pin_write_logic	;wreg free
   916   0012DE                     
   917                           ;ECU_layer/KEYPAD/ecu_keypad.c: 63:             for(cols_counter=0;cols_counter<4;cols_c
      +                          ounter++)
   918   0012DE  0E00               	movlw	0
   919   0012E0  6E47               	movwf	keypad_get_value@cols_counter^0,c
   920   0012E2                     l1591:
   921                           
   922                           ;ECU_layer/KEYPAD/ecu_keypad.c: 64:             {;ECU_layer/KEYPAD/ecu_keypad.c: 65:    
      +                                       ret=gpio_pin_read_logic(&(keypad->keypad_col_pins[cols_counter]),&getValue)
      +                          ;
   923   0012E2  5040               	movf	keypad_get_value@keypad^0,w,c
   924   0012E4  2447               	addwf	keypad_get_value@cols_counter^0,w,c
   925   0012E6  0F04               	addlw	4
   926   0012E8  6E38               	movwf	gpio_pin_read_logic@_pin_config^0,c
   927   0012EA  0E44               	movlw	low keypad_get_value@getValue
   928   0012EC  6E39               	movwf	gpio_pin_read_logic@logic^0,c
   929   0012EE  ECA6  F009         	call	_gpio_pin_read_logic	;wreg free
   930   0012F2  6E43               	movwf	keypad_get_value@ret^0,c
   931   0012F4                     
   932                           ;ECU_layer/KEYPAD/ecu_keypad.c: 66:                 if(HIGH ==getValue)
   933   0012F4  0444               	decf	keypad_get_value@getValue^0,w,c
   934   0012F6  A4D8               	btfss	status,2,c
   935   0012F8  EF80  F009         	goto	u991
   936   0012FC  EF82  F009         	goto	u990
   937   001300                     u991:
   938   001300  EF92  F009         	goto	l1597
   939   001304                     u990:
   940   001304                     
   941                           ;ECU_layer/KEYPAD/ecu_keypad.c: 67:                 {;ECU_layer/KEYPAD/ecu_keypad.c: 68:
      +                                               *value=btn_values[rows_counter][cols_counter];
   942   001304  5046               	movf	keypad_get_value@rows_counter^0,w,c
   943   001306  0D04               	mullw	4
   944   001308  50F3               	movf	243,w,c
   945   00130A  0F01               	addlw	low _btn_values
   946   00130C  2447               	addwf	keypad_get_value@cols_counter^0,w,c
   947   00130E  6E42               	movwf	??_keypad_get_value^0,c
   948   001310  C042  FFF6         	movff	??_keypad_get_value,tblptrl
   949   001314                     	if	1	;There is more than 1 active tblptr byte
   950   001314  0E10               	movlw	high __smallconst
   951   001316  6EF7               	movwf	tblptrh,c
   952   001318                     	endif
   953   001318                     	if	0	;tblptru may be non-zero
   954   001318                     	endif
   955   001318                     	if	0	;tblptru may be non-zero
   956   001318                     	endif
   957   001318  5041               	movf	keypad_get_value@value^0,w,c
   958   00131A  6ED9               	movwf	fsr2l,c
   959   00131C  6ADA               	clrf	fsr2h,c
   960   00131E  0008               	tblrd		*
   961   001320  CFF5 FFDF          	movff	tablat,indf2
   962   001324                     l1597:
   963                           
   964                           ;ECU_layer/KEYPAD/ecu_keypad.c: 70:             }
   965   001324  2A47               	incf	keypad_get_value@cols_counter^0,f,c
   966   001326  0E03               	movlw	3
   967   001328  6447               	cpfsgt	keypad_get_value@cols_counter^0,c
   968   00132A  EF99  F009         	goto	u1001
   969   00132E  EF9B  F009         	goto	u1000
   970   001332                     u1001:
   971   001332  EF71  F009         	goto	l1591
   972   001336                     u1000:
   973   001336                     
   974                           ;ECU_layer/KEYPAD/ecu_keypad.c: 72:         }
   975   001336  2A46               	incf	keypad_get_value@rows_counter^0,f,c
   976   001338  0E03               	movlw	3
   977   00133A  6446               	cpfsgt	keypad_get_value@rows_counter^0,c
   978   00133C  EFA2  F009         	goto	u1011
   979   001340  EFA4  F009         	goto	u1010
   980   001344                     u1011:
   981   001344  EF56  F009         	goto	l1571
   982   001348                     u1010:
   983   001348                     l1605:
   984                           
   985                           ;ECU_layer/KEYPAD/ecu_keypad.c: 74:     return ret;
   986   001348  5043               	movf	keypad_get_value@ret^0,w,c
   987   00134A  0012               	return		;funcret
   988   00134C                     __end_of_keypad_get_value:
   989                           	callstack 0
   990                           
   991 ;; *************** function _gpio_pin_write_logic *****************
   992 ;; Defined at:
   993 ;;		line 82 in file "MCAL_layer/GPIO/hal_gpio.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   996 ;;		 -> pin1(1), relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), 
   997 ;;		 -> led_turn_off@pin_init(1), led_turn_on@pin_init(1), led_initalize@pin_init(1), keypad$keypad_row_pins(4), 
   998 ;;		 -> keypad(8), dc_motor_stop@pin2(1), dc_motor_stop@pin1(1), dc_motor_move_left@pin2(1), 
   999 ;;		 -> dc_motor_move_left@pin1(1), dc_motor_move_right@pin2(1), dc_motor_move_right@pin1(1), dc_motor_initialize@pin2(1
      +), 
  1000 ;;		 -> dc_motor_initialize@pin1(1), 
  1001 ;;  logic           1    1[COMRAM] enum E492
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  status          1    7[COMRAM] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      unsigned char 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;Total ram usage:        8 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_keypad_get_value
  1023 ;;		_gpio_pin_initalize
  1024 ;;		_main
  1025 ;;		_dc_motor_move_right
  1026 ;;		_dc_motor_move_left
  1027 ;;		_dc_motor_stop
  1028 ;;		_led_turn_on
  1029 ;;		_led_turn_off
  1030 ;;		_relay_turn_on
  1031 ;;		_relay_turn_off
  1032 ;;		_ssd_write_number
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text5
  1037   001154                     __ptext5:
  1038                           	callstack 0
  1039   001154                     _gpio_pin_write_logic:
  1040                           	callstack 28
  1041   001154                     
  1042                           ;MCAL_layer/GPIO/hal_gpio.c: 82: Std_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config,logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 83: {;MCAL_layer/GPIO/hal_gpio.c
      +                          : 84:     Std_ReturnType status=(Std_ReturnType)0x01;
  1043   001154  0E01               	movlw	1
  1044   001156  6E3F               	movwf	gpio_pin_write_logic@status^0,c
  1045                           
  1046                           ;MCAL_layer/GPIO/hal_gpio.c: 85:     if(((void*)0)==_pin_config || _pin_config->pin > 8 
      +                          -1 || _pin_config->port > 5 -1)
  1047   001158  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1048   00115A  B4D8               	btfsc	status,2,c
  1049   00115C  EFB2  F008         	goto	u841
  1050   001160  EFB4  F008         	goto	u840
  1051   001164                     u841:
  1052   001164  EFD2  F008         	goto	l1503
  1053   001168                     u840:
  1054   001168  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1055   00116A  6ED9               	movwf	fsr2l,c
  1056   00116C  6ADA               	clrf	fsr2h,c
  1057   00116E  30DF               	rrcf	223,w,c
  1058   001170  32E8               	rrcf	wreg,f,c
  1059   001172  32E8               	rrcf	wreg,f,c
  1060   001174  0B07               	andlw	7
  1061   001176  6E3A               	movwf	??_gpio_pin_write_logic^0,c
  1062   001178  0E08               	movlw	8
  1063   00117A  603A               	cpfslt	??_gpio_pin_write_logic^0,c
  1064   00117C  EFC2  F008         	goto	u851
  1065   001180  EFC4  F008         	goto	u850
  1066   001184                     u851:
  1067   001184  EFD2  F008         	goto	l1503
  1068   001188                     u850:
  1069   001188  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1070   00118A  6ED9               	movwf	fsr2l,c
  1071   00118C  6ADA               	clrf	fsr2h,c
  1072   00118E  50DF               	movf	223,w,c
  1073   001190  0B07               	andlw	7
  1074   001192  6E3A               	movwf	??_gpio_pin_write_logic^0,c
  1075   001194  0E04               	movlw	4
  1076   001196  643A               	cpfsgt	??_gpio_pin_write_logic^0,c
  1077   001198  EFD0  F008         	goto	u861
  1078   00119C  EFD2  F008         	goto	u860
  1079   0011A0                     u861:
  1080   0011A0  EF29  F009         	goto	l1513
  1081   0011A4                     u860:
  1082   0011A4                     l1503:
  1083                           
  1084                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     {;MCAL_layer/GPIO/hal_gpio.c: 87:         status=(S
      +                          td_ReturnType)0x00;
  1085   0011A4  0E00               	movlw	0
  1086   0011A6  6E3F               	movwf	gpio_pin_write_logic@status^0,c
  1087                           
  1088                           ;MCAL_layer/GPIO/hal_gpio.c: 88:     }
  1089   0011A8  EF3E  F009         	goto	l1515
  1090   0011AC                     l1505:
  1091                           
  1092                           ;MCAL_layer/GPIO/hal_gpio.c: 93:             (*lat_registers[_pin_config->port]|=((uint8
      +                          )0x01<<_pin_config->pin));
  1093   0011AC  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1094   0011AE  6ED9               	movwf	fsr2l,c
  1095   0011B0  6ADA               	clrf	fsr2h,c
  1096   0011B2  30DF               	rrcf	223,w,c
  1097   0011B4  32E8               	rrcf	wreg,f,c
  1098   0011B6  32E8               	rrcf	wreg,f,c
  1099   0011B8  0B07               	andlw	7
  1100   0011BA  6E3A               	movwf	??_gpio_pin_write_logic^0,c
  1101   0011BC  0E01               	movlw	1
  1102   0011BE  6E3B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1103   0011C0  2A3A               	incf	??_gpio_pin_write_logic^0,f,c
  1104   0011C2  EFE5  F008         	goto	u874
  1105   0011C6                     u875:
  1106   0011C6  90D8               	bcf	status,0,c
  1107   0011C8  363B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1108   0011CA                     u874:
  1109   0011CA  2E3A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1110   0011CC  EFE3  F008         	goto	u875
  1111   0011D0  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1112   0011D2  6ED9               	movwf	fsr2l,c
  1113   0011D4  6ADA               	clrf	fsr2h,c
  1114   0011D6  50DF               	movf	223,w,c
  1115   0011D8  0B07               	andlw	7
  1116   0011DA  0D02               	mullw	2
  1117   0011DC  50F3               	movf	243,w,c
  1118   0011DE  0F0B               	addlw	low _lat_registers
  1119   0011E0  6ED9               	movwf	fsr2l,c
  1120   0011E2  6ADA               	clrf	fsr2h,c
  1121   0011E4  CFDE F03C          	movff	postinc2,??_gpio_pin_write_logic+2
  1122   0011E8  CFDD F03D          	movff	postdec2,??_gpio_pin_write_logic+3
  1123   0011EC  C03C  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1124   0011F0  C03D  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1125   0011F4  503B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1126   0011F6  12DF               	iorwf	indf2,f,c
  1127                           
  1128                           ;MCAL_layer/GPIO/hal_gpio.c: 94:             break;
  1129   0011F8  EF3E  F009         	goto	l1515
  1130   0011FC                     l1507:
  1131                           
  1132                           ;MCAL_layer/GPIO/hal_gpio.c: 97:             (*lat_registers[_pin_config->port]&=~((uint
      +                          8)0x01<<_pin_config->pin));
  1133   0011FC  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1134   0011FE  6ED9               	movwf	fsr2l,c
  1135   001200  6ADA               	clrf	fsr2h,c
  1136   001202  30DF               	rrcf	223,w,c
  1137   001204  32E8               	rrcf	wreg,f,c
  1138   001206  32E8               	rrcf	wreg,f,c
  1139   001208  0B07               	andlw	7
  1140   00120A  6E3A               	movwf	??_gpio_pin_write_logic^0,c
  1141   00120C  0E01               	movlw	1
  1142   00120E  6E3B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1143   001210  2A3A               	incf	??_gpio_pin_write_logic^0,f,c
  1144   001212  EF0D  F009         	goto	u884
  1145   001216                     u885:
  1146   001216  90D8               	bcf	status,0,c
  1147   001218  363B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1148   00121A                     u884:
  1149   00121A  2E3A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1150   00121C  EF0B  F009         	goto	u885
  1151   001220  503B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1152   001222  0AFF               	xorlw	255
  1153   001224  6E3C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1154   001226  5038               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1155   001228  6ED9               	movwf	fsr2l,c
  1156   00122A  6ADA               	clrf	fsr2h,c
  1157   00122C  50DF               	movf	223,w,c
  1158   00122E  0B07               	andlw	7
  1159   001230  0D02               	mullw	2
  1160   001232  50F3               	movf	243,w,c
  1161   001234  0F0B               	addlw	low _lat_registers
  1162   001236  6ED9               	movwf	fsr2l,c
  1163   001238  6ADA               	clrf	fsr2h,c
  1164   00123A  CFDE F03D          	movff	postinc2,??_gpio_pin_write_logic+3
  1165   00123E  CFDD F03E          	movff	postdec2,??_gpio_pin_write_logic+4
  1166   001242  C03D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1167   001246  C03E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1168   00124A  503C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1169   00124C  16DF               	andwf	indf2,f,c
  1170                           
  1171                           ;MCAL_layer/GPIO/hal_gpio.c: 98:             break;
  1172   00124E  EF3E  F009         	goto	l1515
  1173   001252                     l1513:
  1174   001252  5039               	movf	gpio_pin_write_logic@logic^0,w,c
  1175   001254  6E3A               	movwf	??_gpio_pin_write_logic^0,c
  1176   001256  6A3B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1177                           
  1178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 1, Range of values is 0 to 0
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            4     3 (average)
  1184                           ;	Chosen strategy is simple_byte
  1185   001258  503B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1186   00125A  0A00               	xorlw	0	; case 0
  1187   00125C  B4D8               	btfsc	status,2,c
  1188   00125E  EF33  F009         	goto	l1895
  1189   001262  EFD2  F008         	goto	l1503
  1190   001266                     l1895:
  1191                           
  1192                           ; Switch size 1, requested type "simple"
  1193                           ; Number of cases is 2, Range of values is 0 to 1
  1194                           ; switch strategies available:
  1195                           ; Name         Instructions Cycles
  1196                           ; simple_byte            7     4 (average)
  1197                           ;	Chosen strategy is simple_byte
  1198   001266  503A               	movf	??_gpio_pin_write_logic^0,w,c
  1199   001268  0A00               	xorlw	0	; case 0
  1200   00126A  B4D8               	btfsc	status,2,c
  1201   00126C  EFFE  F008         	goto	l1507
  1202   001270  0A01               	xorlw	1	; case 1
  1203   001272  B4D8               	btfsc	status,2,c
  1204   001274  EFD6  F008         	goto	l1505
  1205   001278  EFD2  F008         	goto	l1503
  1206   00127C                     l1515:
  1207                           
  1208                           ;MCAL_layer/GPIO/hal_gpio.c: 104:     return status;
  1209   00127C  503F               	movf	gpio_pin_write_logic@status^0,w,c
  1210   00127E  0012               	return		;funcret
  1211   001280                     __end_of_gpio_pin_write_logic:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _gpio_pin_read_logic *****************
  1215 ;; Defined at:
  1216 ;;		line 116 in file "MCAL_layer/GPIO/hal_gpio.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1219 ;;		 -> keypad$keypad_col_pins(4), keypad(8), 
  1220 ;;  logic           1    1[COMRAM] PTR enum E492
  1221 ;;		 -> keypad_get_value@getValue(1), button_read_state@pin_logic(1), 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  status          1    6[COMRAM] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      unsigned char 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        7 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_keypad_get_value
  1243 ;;		_button_read_state
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text6
  1248   00134C                     __ptext6:
  1249                           	callstack 0
  1250   00134C                     _gpio_pin_read_logic:
  1251                           	callstack 29
  1252   00134C                     
  1253                           ;MCAL_layer/GPIO/hal_gpio.c: 116: Std_ReturnType gpio_pin_read_logic(const pin_config_t*
      +                           _pin_config,logic_t *logic);MCAL_layer/GPIO/hal_gpio.c: 117: {;MCAL_layer/GPIO/hal_gpio
      +                          .c: 118:     Std_ReturnType status=(Std_ReturnType)0x01;
  1254   00134C  0E01               	movlw	1
  1255   00134E  6E3E               	movwf	gpio_pin_read_logic@status^0,c
  1256                           
  1257                           ;MCAL_layer/GPIO/hal_gpio.c: 119:     if(((void*)0)==_pin_config || ((void*)0) == logic 
      +                          || _pin_config->pin > 8 -1 || _pin_config->port > 5 -1)
  1258   001350  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1259   001352  B4D8               	btfsc	status,2,c
  1260   001354  EFAE  F009         	goto	u891
  1261   001358  EFB0  F009         	goto	u890
  1262   00135C                     u891:
  1263   00135C  EFD6  F009         	goto	l1531
  1264   001360                     u890:
  1265   001360  5039               	movf	gpio_pin_read_logic@logic^0,w,c
  1266   001362  B4D8               	btfsc	status,2,c
  1267   001364  EFB6  F009         	goto	u901
  1268   001368  EFB8  F009         	goto	u900
  1269   00136C                     u901:
  1270   00136C  EFD6  F009         	goto	l1531
  1271   001370                     u900:
  1272   001370  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1273   001372  6ED9               	movwf	fsr2l,c
  1274   001374  6ADA               	clrf	fsr2h,c
  1275   001376  30DF               	rrcf	223,w,c
  1276   001378  32E8               	rrcf	wreg,f,c
  1277   00137A  32E8               	rrcf	wreg,f,c
  1278   00137C  0B07               	andlw	7
  1279   00137E  6E3A               	movwf	??_gpio_pin_read_logic^0,c
  1280   001380  0E08               	movlw	8
  1281   001382  603A               	cpfslt	??_gpio_pin_read_logic^0,c
  1282   001384  EFC6  F009         	goto	u911
  1283   001388  EFC8  F009         	goto	u910
  1284   00138C                     u911:
  1285   00138C  EFD6  F009         	goto	l1531
  1286   001390                     u910:
  1287   001390  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1288   001392  6ED9               	movwf	fsr2l,c
  1289   001394  6ADA               	clrf	fsr2h,c
  1290   001396  50DF               	movf	223,w,c
  1291   001398  0B07               	andlw	7
  1292   00139A  6E3A               	movwf	??_gpio_pin_read_logic^0,c
  1293   00139C  0E04               	movlw	4
  1294   00139E  643A               	cpfsgt	??_gpio_pin_read_logic^0,c
  1295   0013A0  EFD4  F009         	goto	u921
  1296   0013A4  EFD6  F009         	goto	u920
  1297   0013A8                     u921:
  1298   0013A8  EFDA  F009         	goto	l1533
  1299   0013AC                     u920:
  1300   0013AC                     l1531:
  1301                           
  1302                           ;MCAL_layer/GPIO/hal_gpio.c: 120:     {;MCAL_layer/GPIO/hal_gpio.c: 121:         status=
      +                          (Std_ReturnType)0x00;
  1303   0013AC  0E00               	movlw	0
  1304   0013AE  6E3E               	movwf	gpio_pin_read_logic@status^0,c
  1305                           
  1306                           ;MCAL_layer/GPIO/hal_gpio.c: 122:     }
  1307   0013B0  EF04  F00A         	goto	l1535
  1308   0013B4                     l1533:
  1309                           
  1310                           ;MCAL_layer/GPIO/hal_gpio.c: 124:         *logic=(*port_registers[_pin_config->port] >> 
      +                          _pin_config->pin) & (uint8)0x01;
  1311   0013B4  5039               	movf	gpio_pin_read_logic@logic^0,w,c
  1312   0013B6  6ED9               	movwf	fsr2l,c
  1313   0013B8  6ADA               	clrf	fsr2h,c
  1314   0013BA  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1315   0013BC  6EE1               	movwf	fsr1l,c
  1316   0013BE  6AE2               	clrf	fsr1h,c
  1317   0013C0  30E7               	rrcf	231,w,c
  1318   0013C2  32E8               	rrcf	wreg,f,c
  1319   0013C4  32E8               	rrcf	wreg,f,c
  1320   0013C6  0B07               	andlw	7
  1321   0013C8  6E3A               	movwf	??_gpio_pin_read_logic^0,c
  1322   0013CA  5038               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  1323   0013CC  6EE1               	movwf	fsr1l,c
  1324   0013CE  6AE2               	clrf	fsr1h,c
  1325   0013D0  50E7               	movf	231,w,c
  1326   0013D2  0B07               	andlw	7
  1327   0013D4  0D02               	mullw	2
  1328   0013D6  50F3               	movf	243,w,c
  1329   0013D8  0F01               	addlw	low _port_registers
  1330   0013DA  6EE1               	movwf	fsr1l,c
  1331   0013DC  6AE2               	clrf	fsr1h,c
  1332   0013DE  CFE6 F03B          	movff	postinc1,??_gpio_pin_read_logic+1
  1333   0013E2  CFE5 F03C          	movff	postdec1,??_gpio_pin_read_logic+2
  1334   0013E6  C03B  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  1335   0013EA  C03C  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  1336   0013EE  50E7               	movf	indf1,w,c
  1337   0013F0  6E3D               	movwf	(??_gpio_pin_read_logic+3)^0,c
  1338   0013F2  2A3A               	incf	??_gpio_pin_read_logic^0,f,c
  1339   0013F4  EFFE  F009         	goto	u934
  1340   0013F8                     u935:
  1341   0013F8  90D8               	bcf	status,0,c
  1342   0013FA  323D               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  1343   0013FC                     u934:
  1344   0013FC  2E3A               	decfsz	??_gpio_pin_read_logic^0,f,c
  1345   0013FE  EFFC  F009         	goto	u935
  1346   001402  503D               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  1347   001404  0B01               	andlw	1
  1348   001406  6EDF               	movwf	indf2,c
  1349   001408                     l1535:
  1350                           
  1351                           ;MCAL_layer/GPIO/hal_gpio.c: 126:     return status;
  1352   001408  503E               	movf	gpio_pin_read_logic@status^0,w,c
  1353   00140A  0012               	return		;funcret
  1354   00140C                     __end_of_gpio_pin_read_logic:
  1355                           	callstack 0
  1356                           
  1357                           	psect	rparam
  1358   000000                     
  1359                           	psect	config
  1360                           
  1361                           ; Padding undefined space
  1362   300000                     	org	3145728
  1363   300000  FF                 	db	255
  1364                           
  1365                           ;Config register CONFIG1H @ 0x300001
  1366                           ;	Oscillator Selection bits
  1367                           ;	OSC = HS, HS oscillator
  1368                           ;	Fail-Safe Clock Monitor Enable bit
  1369                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1370                           ;	Internal/External Oscillator Switchover bit
  1371                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1372   300001                     	org	3145729
  1373   300001  02                 	db	2
  1374                           
  1375                           ;Config register CONFIG2L @ 0x300002
  1376                           ;	Power-up Timer Enable bit
  1377                           ;	PWRT = OFF, PWRT disabled
  1378                           ;	Brown-out Reset Enable bits
  1379                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1380                           ;	Brown Out Reset Voltage bits
  1381                           ;	BORV = 1, 
  1382   300002                     	org	3145730
  1383   300002  09                 	db	9
  1384                           
  1385                           ;Config register CONFIG2H @ 0x300003
  1386                           ;	Watchdog Timer Enable bit
  1387                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1388                           ;	Watchdog Timer Postscale Select bits
  1389                           ;	WDTPS = 32768, 1:32768
  1390   300003                     	org	3145731
  1391   300003  1E                 	db	30
  1392                           
  1393                           ; Padding undefined space
  1394   300004                     	org	3145732
  1395   300004  FF                 	db	255
  1396                           
  1397                           ;Config register CONFIG3H @ 0x300005
  1398                           ;	CCP2 MUX bit
  1399                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1400                           ;	PORTB A/D Enable bit
  1401                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1402                           ;	Low-Power Timer1 Oscillator Enable bit
  1403                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1404                           ;	MCLR Pin Enable bit
  1405                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1406   300005                     	org	3145733
  1407   300005  81                 	db	129
  1408                           
  1409                           ;Config register CONFIG4L @ 0x300006
  1410                           ;	Stack Full/Underflow Reset Enable bit
  1411                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1412                           ;	Single-Supply ICSP Enable bit
  1413                           ;	LVP = OFF, Single-Supply ICSP disabled
  1414                           ;	Extended Instruction Set Enable bit
  1415                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1416                           ;	Background Debugger Enable bit
  1417                           ;	DEBUG = 0x1, unprogrammed default
  1418   300006                     	org	3145734
  1419   300006  81                 	db	129
  1420                           
  1421                           ; Padding undefined space
  1422   300007                     	org	3145735
  1423   300007  FF                 	db	255
  1424                           
  1425                           ;Config register CONFIG5L @ 0x300008
  1426                           ;	Code Protection bit
  1427                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1428                           ;	Code Protection bit
  1429                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1430                           ;	Code Protection bit
  1431                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1432                           ;	Code Protection bit
  1433                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1434   300008                     	org	3145736
  1435   300008  0F                 	db	15
  1436                           
  1437                           ;Config register CONFIG5H @ 0x300009
  1438                           ;	Boot Block Code Protection bit
  1439                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1440                           ;	Data EEPROM Code Protection bit
  1441                           ;	CPD = OFF, Data EEPROM not code-protected
  1442   300009                     	org	3145737
  1443   300009  C0                 	db	192
  1444                           
  1445                           ;Config register CONFIG6L @ 0x30000A
  1446                           ;	Write Protection bit
  1447                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1448                           ;	Write Protection bit
  1449                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1450                           ;	Write Protection bit
  1451                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1452                           ;	Write Protection bit
  1453                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1454   30000A                     	org	3145738
  1455   30000A  0F                 	db	15
  1456                           
  1457                           ;Config register CONFIG6H @ 0x30000B
  1458                           ;	Configuration Register Write Protection bit
  1459                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1460                           ;	Boot Block Write Protection bit
  1461                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1462                           ;	Data EEPROM Write Protection bit
  1463                           ;	WRTD = OFF, Data EEPROM not write-protected
  1464   30000B                     	org	3145739
  1465   30000B  E0                 	db	224
  1466                           
  1467                           ;Config register CONFIG7L @ 0x30000C
  1468                           ;	Table Read Protection bit
  1469                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1470                           ;	Table Read Protection bit
  1471                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1472                           ;	Table Read Protection bit
  1473                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1474                           ;	Table Read Protection bit
  1475                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1476   30000C                     	org	3145740
  1477   30000C  0F                 	db	15
  1478                           
  1479                           ;Config register CONFIG7H @ 0x30000D
  1480                           ;	Boot Block Table Read Protection bit
  1481                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1482   30000D                     	org	3145741
  1483   30000D  40                 	db	64
  1484                           tosu	equ	0xFFF
  1485                           tosh	equ	0xFFE
  1486                           tosl	equ	0xFFD
  1487                           stkptr	equ	0xFFC
  1488                           pclatu	equ	0xFFB
  1489                           pclath	equ	0xFFA
  1490                           pcl	equ	0xFF9
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           indf0	equ	0xFEF
  1498                           postinc0	equ	0xFEE
  1499                           postdec0	equ	0xFED
  1500                           preinc0	equ	0xFEC
  1501                           plusw0	equ	0xFEB
  1502                           fsr0h	equ	0xFEA
  1503                           fsr0l	equ	0xFE9
  1504                           wreg	equ	0xFE8
  1505                           indf1	equ	0xFE7
  1506                           postinc1	equ	0xFE6
  1507                           postdec1	equ	0xFE5
  1508                           preinc1	equ	0xFE4
  1509                           plusw1	equ	0xFE3
  1510                           fsr1h	equ	0xFE2
  1511                           fsr1l	equ	0xFE1
  1512                           bsr	equ	0xFE0
  1513                           indf2	equ	0xFDF
  1514                           postinc2	equ	0xFDE
  1515                           postdec2	equ	0xFDD
  1516                           preinc2	equ	0xFDC
  1517                           plusw2	equ	0xFDB
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        39
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initalize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_col_pins(COMRAM[4]), 
		 -> keypad$keypad_row_pins(COMRAM[4]), led_initalize@pin_init(COMRAM[1]), pin1(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_initalize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), keypad(COMRAM[8]), keypad$keypad_row_pins(COMRAM[4]), 
		 -> led_initalize@pin_init(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), keypad$keypad_col_pins(COMRAM[4]), 

    gpio_pin_read_logic@logic	PTR enum E492 size(1) Largest target is 1
		 -> button_read_state@pin_logic(COMRAM[1]), keypad_get_value@getValue(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> dc_motor_initialize@pin1(COMRAM[1]), dc_motor_initialize@pin2(COMRAM[1]), dc_motor_move_left@pin1(COMRAM[1]), dc_motor_move_left@pin2(COMRAM[1]), 
		 -> dc_motor_move_right@pin1(COMRAM[1]), dc_motor_move_right@pin2(COMRAM[1]), dc_motor_stop@pin1(COMRAM[1]), dc_motor_stop@pin2(COMRAM[1]), 
		 -> keypad(COMRAM[8]), keypad$keypad_row_pins(COMRAM[4]), led_initalize@pin_init(COMRAM[1]), led_turn_off@pin_init(COMRAM[1]), 
		 -> led_turn_on@pin_init(COMRAM[1]), pin1(COMRAM[1]), relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), 
		 -> relay_turn_on@pin(COMRAM[1]), 

    keypad_get_value@keypad	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> getValue(COMRAM[1]), 

    keypad_initalize@keypad	PTR const struct . size(1) Largest target is 8
		 -> keypad(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _keypad_initalize->_gpio_pin_initalize
    _gpio_pin_initalize->_gpio_pin_write_logic
    _keypad_get_value->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13434
       _gpio_pin_direction_initalize
               _gpio_pin_write_logic
                   _keypad_get_value
                   _keypad_initalize
 ---------------------------------------------------------------------------------
 (1) _keypad_initalize                                     2     1      1    5735
                                             10 COMRAM     2     1      1
       _gpio_pin_direction_initalize
                 _gpio_pin_initalize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initalize                                   2     1      1    4696
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_initalize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initalize                         7     6      1     733
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                     8     6      2    4024
                                              8 COMRAM     8     6      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2    2937
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     482
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_pin_direction_initalize
   _gpio_pin_write_logic
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _keypad_initalize
     _gpio_pin_direction_initalize
     _gpio_pin_initalize
       _gpio_pin_direction_initalize
       _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      47       1       55.9%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      12        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 01 20:42:46 2023

                 keypad_initalize@keypad 0042                                       l93 134A  
                                     l79 1482                     relay_initialize@F566 002A  
                                    l212 140A                                      l205 127E  
                                    l224 14C0                                      l186 1152  
                                    u900 1370                                      u820 1126  
                                    u804 1088                                      u901 136C  
                                    u821 1120                                      u805 1084  
                                    u910 1390                                      u830 1128  
                                    u814 10DE                                      u911 138C  
                                    u815 10DA                                      u920 13AC  
                                    u840 1168                                      u921 13A8  
                                    u841 1164                                      u850 1188  
                                    u770 1026                                      u851 1184  
                                    u771 1022                                      u860 11A4  
                                    u780 1046                                      u940 1494  
                                    u861 11A0                                      u781 1042  
                                    u941 1490                                      u934 13FC  
                                    u790 1062                                      u950 141C  
                                    u935 13F8                                      u791 105E  
                                    u951 1418                                      u960 1290  
                                    u961 128C                                      u890 1360  
                                    u874 11CA                                      u970 12A0  
                                    u891 135C                                      u875 11C6  
                                    u971 129C                                      u884 121A  
                                    u980 12D0                                      u885 1216  
                                    u981 12CC                                      u990 1304  
                                    u991 1300                                      wreg 0FE8  
                                   l1501 1188                                     l1503 11A4  
                                   l1505 11AC                                     l1513 1252  
                                   l1601 1336                                     l1531 13AC  
                                   l1523 134C                                     l1507 11FC  
                                   l1515 127C                                     l1603 1338  
                                   l1533 13B4                                     l1525 1360  
                                   l1605 1348                                     l1541 1494  
                                   l1535 1408                                     l1527 1370  
                                   l1471 1012                                     l1543 149C  
                                   l1551 141C                                     l1529 1390  
                                   l1561 1290                                     l1481 10C0  
                                   l1473 1026                                     l1545 14BE  
                                   l1553 1424                                     l1571 12AC  
                                   l1563 12A0                                     l1475 1046  
                                   l1539 1484                                     l1555 1480  
                                   l1581 12C0                                     l1565 12A8  
                                   l1477 1062                                     l1549 140C  
                                   l1591 12E2                                     l1583 12D0  
                                   l1559 1280                                     l1479 106A  
                                   l1487 1110                                     l1497 1154  
                                   l1593 12F4                                     l1585 12DE  
                                   l1577 12B0                                     l1489 1150  
                                   l1499 1168                                     l1595 1304  
                                   l1579 12BE                                     l1597 1324  
                                   l1599 1326                                     l1881 1508  
                                   l1883 1514                                     l1875 14F8  
                                   l1893 113A                                     l1877 14F8  
                                   l1895 1266                                     l1879 1500  
                                   u1000 1336                                     u1001 1332  
                                   u1010 1348                                     u1011 1344  
         gpio_pin_read_logic@_pin_config 0038                                     _main 14F8  
                                   _pin1 0027                                     fsr1h 0FE2  
                                   fsr2h 0FDA                                     indf1 0FE7  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9             keypad_get_value@rows_counter 0046  
                                   prodl 0FF3                                     start 0000  
                           ___param_bank 0000                     _gpio_pin_write_logic 1154  
                 keypad_get_value@keypad 0040                                    ?_main 0038  
               __end_of_keypad_get_value 134C                                    tablat 0FF5  
                                  status 0FD8                 __end_of_keypad_initalize 1484  
                        __initialization 14C2                      keypad_get_value@ret 0043  
                dc_motor_initialize@F571 0036                  dc_motor_initialize@F573 0035  
                           __end_of_main 1528                    ?_gpio_pin_write_logic 0038  
               gpio_pin_read_logic@logic 0039                            _lat_registers 000B  
                                 ??_main 0048                            __activetblptr 0002  
                       led_turn_off@F582 002C                keypad_get_value@l_counter 0045  
                                 _keypad 001F                                   clear_0 14E8  
                                 isa$std 0001                             __pdataCOMRAM 0001  
                      led_initalize@F572 002E                        dc_motor_stop@F592 0030  
                      dc_motor_stop@F594 002F                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization 14EE                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 003A                           __pcstackCOMRAM 0038  
               keypad_get_value@getValue 0044                    gpio_pin_initalize@ret 0041  
                      ?_keypad_get_value 0040                       ??_keypad_get_value 0042  
                             _btn_values 1001                           _tris_registers 0015  
gpio_pin_direction_initalize@_pin_config 0038                        ?_keypad_initalize 0042  
                                __Hparam 0000                                  __Lparam 0000  
                     ??_keypad_initalize 0043                      _gpio_pin_read_logic 134C  
             __end_of_gpio_pin_initalize 14C2                             __psmallconst 1000  
                                __pcinit 14C2                                  __ramtop 1000  
                                __ptext0 14F8                                  __ptext1 140C  
                                __ptext2 1484                                  __ptext3 1012  
                                __ptext4 1280                                  __ptext5 1154  
                                __ptext6 134C                     ?_gpio_pin_read_logic 0038  
                   end_of_initialization 14EE                            __Lmediumconst 0000  
           keypad_get_value@cols_counter 0047                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc1 0FE6                                  postinc2 0FDE  
   __end_of_gpio_pin_direction_initalize 1154             _gpio_pin_direction_initalize 1012  
                    keypad_initalize@ret 0043                    ??_gpio_pin_read_logic 003A  
                  keypad_get_value@value 0041                       relay_turn_off@F576 0028  
                          __pidataCOMRAM 1528                      start_initialization 14C2  
          ?_gpio_pin_direction_initalize 0038                          led_turn_on@F577 002D  
                            __pbssCOMRAM 0028       gpio_pin_direction_initalize@status 003E  
          gpio_pin_initalize@_pin_config 0040          gpio_pin_write_logic@_pin_config 0038  
                         led_toggle@F587 002B                  dc_motor_move_right@F580 0033  
                dc_motor_move_right@F578 0034                gpio_pin_write_logic@logic 0039  
                            __smallconst 1000                       _gpio_pin_initalize 1484  
         ??_gpio_pin_direction_initalize 0039                      ?_gpio_pin_initalize 0040  
                   ??_gpio_pin_initalize 0041                        relay_turn_on@F571 0029  
                              copy_data0 14D6                   dc_motor_move_left@F585 0032  
                 dc_motor_move_left@F587 0031                                 __Hrparam 0000  
                               __Lrparam 0000                       __end_of_btn_values 1011  
            __end_of_gpio_pin_read_logic 140C                                 _getValue 0037  
                       _keypad_get_value 1280                                 isa$xinst 0000  
                       _keypad_initalize 140C                gpio_pin_read_logic@status 003E  
           __end_of_gpio_pin_write_logic 1280                           _port_registers 0001  
             gpio_pin_write_logic@status 003F  
