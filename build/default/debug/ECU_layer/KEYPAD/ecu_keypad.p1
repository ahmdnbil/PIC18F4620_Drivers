Version 4.0 HI-TECH Software Intermediate Code
"90 ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h: 90: {
[s S8 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S8 . port pin direction logic ]
"25 ECU_layer/KEYPAD/./ecu_keypad.h
[; ;ECU_layer/KEYPAD/./ecu_keypad.h: 25: {
[s S9 `S8 -> 4 `i `S8 -> 4 `i ]
[n S9 . keypad_row_pins keypad_col_pins ]
"103 ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h: 103: Std_ReturnType gpio_pin_initalize(const pin_config_t* _pin_config);
[v _gpio_pin_initalize `(uc ~T0 @X0 0 ef1`*CS8 ]
"98
[; ;ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h: 98: Std_ReturnType gpio_pin_direction_initalize(const pin_config_t* _pin_config);
[v _gpio_pin_direction_initalize `(uc ~T0 @X0 0 ef1`*CS8 ]
"58 ECU_layer/KEYPAD/ecu_keypad.c
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 58:                 ret=gpio_pin_write_logic(&(keypad->keypad_col_pins[l_counter]),LOW);
[c E492 0 1 .. ]
[n E492 . LOW HIGH  ]
"100 ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h: 100: Std_ReturnType gpio_pin_write_logic(const pin_config_t* _pin_config,logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS8`E492 ]
"101
[; ;ECU_layer/KEYPAD/./../../MCAL_layer/GPIO/hal_gpio.h: 101: Std_ReturnType gpio_pin_read_logic(const pin_config_t* _pin_config,logic_t *logic);
[v _gpio_pin_read_logic `(uc ~T0 @X0 0 ef2`*CS8`*E492 ]
[v F562 `Cuc ~T0 @X0 -> 4 `i t ]
"14 ECU_layer/KEYPAD/ecu_keypad.c
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 14: const uint8 btn_values[4][4]=
[v _btn_values `F562 ~T0 @X0 -> 4 `i e ]
[i _btn_values
:U ..
:U ..
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 47 `ui `uc
..
:U ..
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 42 `ui `uc
..
:U ..
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
..
:U ..
-> -> 35 `ui `uc
-> -> 48 `ui `uc
-> -> 61 `ui `uc
-> -> 43 `ui `uc
..
..
]
"21
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 21: Std_ReturnType keypad_initalize(const keypad_t *keypad)
[v _keypad_initalize `(uc ~T0 @X0 1 ef1`*CS9 ]
"22
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 22: {
{
[e :U _keypad_initalize ]
"21
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 21: Std_ReturnType keypad_initalize(const keypad_t *keypad)
[v _keypad `*CS9 ~T0 @X0 1 r1 ]
"22
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 22: {
[f ]
"23
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 23:     Std_ReturnType ret=(Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"24
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 24:     if(((void*)0) == keypad)
[e $ ! == -> -> -> 0 `i `*v `*CS9 _keypad 11  ]
"25
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 25:     {
{
"26
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 26:         ret=(Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"27
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 27:     }
}
[e $U 12  ]
"28
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 28:     else
[e :U 11 ]
"29
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 29:     {
{
"30
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 30:         ret=gpio_pin_initalize(&(keypad->keypad_row_pins[0]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _keypad 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _keypad 0 `ui `ux ]
"31
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 31:         ret=gpio_pin_initalize(&(keypad->keypad_row_pins[1]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _keypad 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _keypad 0 `ui `ux ]
"32
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 32:         ret=gpio_pin_initalize(&(keypad->keypad_row_pins[2]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _keypad 0 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _keypad 0 `ui `ux ]
"33
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 33:         ret=gpio_pin_initalize(&(keypad->keypad_row_pins[3]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _keypad 0 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _keypad 0 `ui `ux ]
"35
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 35:         ret = gpio_pin_direction_initalize(&(keypad->keypad_col_pins[0]));
[e = _ret ( _gpio_pin_direction_initalize (1 &U *U + &U . *U _keypad 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _keypad 1 `ui `ux ]
"36
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 36:         ret = gpio_pin_direction_initalize(&(keypad->keypad_col_pins[1]));
[e = _ret ( _gpio_pin_direction_initalize (1 &U *U + &U . *U _keypad 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _keypad 1 `ui `ux ]
"37
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 37:         ret = gpio_pin_direction_initalize(&(keypad->keypad_col_pins[2]));
[e = _ret ( _gpio_pin_direction_initalize (1 &U *U + &U . *U _keypad 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _keypad 1 `ui `ux ]
"38
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 38:         ret = gpio_pin_direction_initalize(&(keypad->keypad_col_pins[3]));
[e = _ret ( _gpio_pin_direction_initalize (1 &U *U + &U . *U _keypad 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _keypad 1 `ui `ux ]
"39
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 39:     }
}
[e :U 12 ]
"40
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 40:     return ret;
[e ) _ret ]
[e $UE 10  ]
"41
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 41: }
[e :UE 10 ]
}
"43
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 43: Std_ReturnType keypad_get_value(const keypad_t *keypad, uint8 *value)
[v _keypad_get_value `(uc ~T0 @X0 1 ef2`*CS9`*uc ]
"44
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 44: {
{
[e :U _keypad_get_value ]
"43
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 43: Std_ReturnType keypad_get_value(const keypad_t *keypad, uint8 *value)
[v _keypad `*CS9 ~T0 @X0 1 r1 ]
[v _value `*uc ~T0 @X0 1 r2 ]
"44
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 44: {
[f ]
"45
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 45:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"46
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 46:     uint8 rows_counter,cols_counter,l_counter,getValue;
[v _rows_counter `uc ~T0 @X0 1 a ]
[v _cols_counter `uc ~T0 @X0 1 a ]
[v _l_counter `uc ~T0 @X0 1 a ]
[v _getValue `uc ~T0 @X0 1 a ]
"47
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 47:     if (((void*)0) == keypad || ((void*)0) == value)
[e $ ! || == -> -> -> 0 `i `*v `*CS9 _keypad == -> -> -> 0 `i `*v `*uc _value 14  ]
"48
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 48:     {
{
"49
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 49:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"50
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 50:     }
}
[e $U 15  ]
"51
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 51:     else
[e :U 14 ]
"52
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 52:     {
{
"53
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 53:         for(rows_counter=0;rows_counter<4;rows_counter++)
{
[e = _rows_counter -> -> 0 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 16  ]
[e $U 17  ]
[e :U 16 ]
"54
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 54:         {
{
"56
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 56:             for(l_counter=0;l_counter<4;l_counter++)
{
[e = _l_counter -> -> 0 `i `uc ]
[e $ < -> _l_counter `i -> 4 `i 19  ]
[e $U 20  ]
[e :U 19 ]
"57
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 57:             {
{
"58
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 58:                 ret=gpio_pin_write_logic(&(keypad->keypad_col_pins[l_counter]),LOW);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _keypad 1 * -> _l_counter `ux -> -> # *U &U . *U _keypad 1 `ui `ux . `E492 0 ]
"59
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 59:             }
}
[e ++ _l_counter -> -> 1 `i `uc ]
[e $ < -> _l_counter `i -> 4 `i 19  ]
[e :U 20 ]
}
"62
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 62:             ret=gpio_pin_write_logic(&(keypad->keypad_col_pins[rows_counter]),HIGH);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _keypad 1 * -> _rows_counter `ux -> -> # *U &U . *U _keypad 1 `ui `ux . `E492 1 ]
"63
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 63:             for(cols_counter=0;cols_counter<4;cols_counter++)
{
[e = _cols_counter -> -> 0 `i `uc ]
[e $ < -> _cols_counter `i -> 4 `i 22  ]
[e $U 23  ]
[e :U 22 ]
"64
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 64:             {
{
"65
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 65:                 ret=gpio_pin_read_logic(&(keypad->keypad_col_pins[cols_counter]),&getValue);
[e = _ret ( _gpio_pin_read_logic (2 , &U *U + &U . *U _keypad 1 * -> _cols_counter `ux -> -> # *U &U . *U _keypad 1 `ui `ux -> &U _getValue `*E492 ]
"66
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 66:                 if(HIGH ==getValue)
[e $ ! == -> . `E492 1 `i -> _getValue `i 25  ]
"67
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 67:                 {
{
"68
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 68:                     *value=btn_values[rows_counter][cols_counter];
[e = *U _value *U + &U *U + &U _btn_values * -> _rows_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux * -> _cols_counter `ux -> -> # *U &U *U + &U _btn_values * -> _rows_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux `ui `ux ]
"69
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 69:                 }
}
[e :U 25 ]
"70
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 70:             }
}
[e ++ _cols_counter -> -> 1 `i `uc ]
[e $ < -> _cols_counter `i -> 4 `i 22  ]
[e :U 23 ]
}
"72
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 72:         }
}
[e ++ _rows_counter -> -> 1 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 16  ]
[e :U 17 ]
}
"73
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 73:     }
}
[e :U 15 ]
"74
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 74:     return ret;
[e ) _ret ]
[e $UE 13  ]
"75
[; ;ECU_layer/KEYPAD/ecu_keypad.c: 75: }
[e :UE 13 ]
}
