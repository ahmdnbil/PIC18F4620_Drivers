Version 4.0 HI-TECH Software Intermediate Code
"90 ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h: 90: {
[s S8 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S8 . port pin direction logic ]
"14 ECU_layer/SSD/ecu_ssd.c
[; ;ECU_layer/SSD/ecu_ssd.c: 14: Std_ReturnType ssd_initalize(const ssd_t *ssd)
[c E552 0 1 .. ]
[n E552 . SSD_COMMON_ANODE SSD_COMMON_CATHODE  ]
"33 ECU_layer/SSD/./ecu_ssd.h
[; ;ECU_layer/SSD/./ecu_ssd.h: 33: {
[s S9 `S8 -> 4 `i `E552 1 ]
[n S9 . ssd_pins ssd_type ]
"103 ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h: 103: Std_ReturnType gpio_pin_initalize(const pin_config_t* _pin_config);
[v _gpio_pin_initalize `(uc ~T0 @X0 0 ef1`*CS8 ]
"41 ECU_layer/SSD/ecu_ssd.c
[; ;ECU_layer/SSD/ecu_ssd.c: 41:         ret = gpio_pin_write_logic(&(ssd->ssd_pins[0]), (number >> 0) & (uint8)0x01);
[c E492 0 1 .. ]
[n E492 . LOW HIGH  ]
"100 ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h
[; ;ECU_layer/SSD/./../../MCAL_layer/GPIO/hal_gpio.h: 100: Std_ReturnType gpio_pin_write_logic(const pin_config_t* _pin_config,logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS8`E492 ]
"14 ECU_layer/SSD/ecu_ssd.c
[; ;ECU_layer/SSD/ecu_ssd.c: 14: Std_ReturnType ssd_initalize(const ssd_t *ssd)
[v _ssd_initalize `(uc ~T0 @X0 1 ef1`*CS9 ]
"15
[; ;ECU_layer/SSD/ecu_ssd.c: 15: {
{
[e :U _ssd_initalize ]
"14
[; ;ECU_layer/SSD/ecu_ssd.c: 14: Std_ReturnType ssd_initalize(const ssd_t *ssd)
[v _ssd `*CS9 ~T0 @X0 1 r1 ]
"15
[; ;ECU_layer/SSD/ecu_ssd.c: 15: {
[f ]
"16
[; ;ECU_layer/SSD/ecu_ssd.c: 16:     Std_ReturnType ret=(Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"17
[; ;ECU_layer/SSD/ecu_ssd.c: 17:     if(((void*)0) == ssd)
[e $ ! == -> -> -> 0 `i `*v `*CS9 _ssd 11  ]
"18
[; ;ECU_layer/SSD/ecu_ssd.c: 18:     {
{
"19
[; ;ECU_layer/SSD/ecu_ssd.c: 19:         ret=(Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"20
[; ;ECU_layer/SSD/ecu_ssd.c: 20:     }
}
[e $U 12  ]
"21
[; ;ECU_layer/SSD/ecu_ssd.c: 21:     else
[e :U 11 ]
"22
[; ;ECU_layer/SSD/ecu_ssd.c: 22:     {
{
"23
[; ;ECU_layer/SSD/ecu_ssd.c: 23:         ret=gpio_pin_initalize(&(ssd->ssd_pins[0]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _ssd 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux ]
"24
[; ;ECU_layer/SSD/ecu_ssd.c: 24:         ret=gpio_pin_initalize(&(ssd->ssd_pins[1]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _ssd 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux ]
"25
[; ;ECU_layer/SSD/ecu_ssd.c: 25:         ret=gpio_pin_initalize(&(ssd->ssd_pins[2]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _ssd 0 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux ]
"26
[; ;ECU_layer/SSD/ecu_ssd.c: 26:         ret=gpio_pin_initalize(&(ssd->ssd_pins[3]));
[e = _ret ( _gpio_pin_initalize (1 &U *U + &U . *U _ssd 0 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux ]
"29
[; ;ECU_layer/SSD/ecu_ssd.c: 29:     }
}
[e :U 12 ]
"30
[; ;ECU_layer/SSD/ecu_ssd.c: 30:     return ret;
[e ) _ret ]
[e $UE 10  ]
"31
[; ;ECU_layer/SSD/ecu_ssd.c: 31: }
[e :UE 10 ]
}
"32
[; ;ECU_layer/SSD/ecu_ssd.c: 32: Std_ReturnType ssd_write_number(const ssd_t *ssd, uint8 number)
[v _ssd_write_number `(uc ~T0 @X0 1 ef2`*CS9`uc ]
"33
[; ;ECU_layer/SSD/ecu_ssd.c: 33: {
{
[e :U _ssd_write_number ]
"32
[; ;ECU_layer/SSD/ecu_ssd.c: 32: Std_ReturnType ssd_write_number(const ssd_t *ssd, uint8 number)
[v _ssd `*CS9 ~T0 @X0 1 r1 ]
[v _number `uc ~T0 @X0 1 r2 ]
"33
[; ;ECU_layer/SSD/ecu_ssd.c: 33: {
[f ]
"34
[; ;ECU_layer/SSD/ecu_ssd.c: 34:     Std_ReturnType ret=(Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"35
[; ;ECU_layer/SSD/ecu_ssd.c: 35:     if((((void*)0) == ssd) || (number<=9))
[e $ ! || == -> -> -> 0 `i `*v `*CS9 _ssd <= -> _number `i -> 9 `i 14  ]
"36
[; ;ECU_layer/SSD/ecu_ssd.c: 36:     {
{
"37
[; ;ECU_layer/SSD/ecu_ssd.c: 37:         ret=(Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"38
[; ;ECU_layer/SSD/ecu_ssd.c: 38:     }
}
[e $U 15  ]
"39
[; ;ECU_layer/SSD/ecu_ssd.c: 39:     else
[e :U 14 ]
"40
[; ;ECU_layer/SSD/ecu_ssd.c: 40:     {
{
"41
[; ;ECU_layer/SSD/ecu_ssd.c: 41:         ret = gpio_pin_write_logic(&(ssd->ssd_pins[0]), (number >> 0) & (uint8)0x01);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _ssd 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux -> & >> -> _number `i -> 0 `i -> -> -> 1 `i `uc `i `E492 ]
"42
[; ;ECU_layer/SSD/ecu_ssd.c: 42:         ret = gpio_pin_write_logic(&(ssd->ssd_pins[1]), (number >> 1) & (uint8)0x01);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _ssd 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux -> & >> -> _number `i -> 1 `i -> -> -> 1 `i `uc `i `E492 ]
"43
[; ;ECU_layer/SSD/ecu_ssd.c: 43:         ret = gpio_pin_write_logic(&(ssd->ssd_pins[2]), (number >> 2) & (uint8)0x01);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _ssd 0 * -> -> -> 2 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux -> & >> -> _number `i -> 2 `i -> -> -> 1 `i `uc `i `E492 ]
"44
[; ;ECU_layer/SSD/ecu_ssd.c: 44:         ret = gpio_pin_write_logic(&(ssd->ssd_pins[3]), (number >> 3) & (uint8)0x01);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U _ssd 0 * -> -> -> 3 `i `ui `ux -> -> # *U &U . *U _ssd 0 `ui `ux -> & >> -> _number `i -> 3 `i -> -> -> 1 `i `uc `i `E492 ]
"45
[; ;ECU_layer/SSD/ecu_ssd.c: 45:     }
}
[e :U 15 ]
"46
[; ;ECU_layer/SSD/ecu_ssd.c: 46:     return ret;
[e ) _ret ]
[e $UE 13  ]
"47
[; ;ECU_layer/SSD/ecu_ssd.c: 47: }
[e :UE 13 ]
}
